// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fito_chanels.proto

package fito;

public final class FitoChanels {
  private FitoChanels() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ChanelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Chanel)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 number = 1;</code>
     */
    boolean hasNumber();
    /**
     * <code>required uint32 number = 1;</code>
     */
    int getNumber();

    /**
     * <code>required uint32 value = 2 [default = 0];</code>
     */
    boolean hasValue();
    /**
     * <code>required uint32 value = 2 [default = 0];</code>
     */
    int getValue();
  }
  /**
   * <pre>
   * Сообщение регулировки для одного канала
   * </pre>
   *
   * Protobuf type {@code fito.Chanel}
   */
  public  static final class Chanel extends
      com.google.protobuf.GeneratedMessageLite<
          Chanel, Chanel.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Chanel)
      ChanelOrBuilder {
    private Chanel() {
    }
    private int bitField0_;
    public static final int NUMBER_FIELD_NUMBER = 1;
    private int number_;
    /**
     * <code>required uint32 number = 1;</code>
     */
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 number = 1;</code>
     */
    public int getNumber() {
      return number_;
    }
    /**
     * <code>required uint32 number = 1;</code>
     */
    private void setNumber(int value) {
      bitField0_ |= 0x00000001;
      number_ = value;
    }
    /**
     * <code>required uint32 number = 1;</code>
     */
    private void clearNumber() {
      bitField0_ = (bitField0_ & ~0x00000001);
      number_ = 0;
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private int value_;
    /**
     * <code>required uint32 value = 2 [default = 0];</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 value = 2 [default = 0];</code>
     */
    public int getValue() {
      return value_;
    }
    /**
     * <code>required uint32 value = 2 [default = 0];</code>
     */
    private void setValue(int value) {
      bitField0_ |= 0x00000002;
      value_ = value;
    }
    /**
     * <code>required uint32 value = 2 [default = 0];</code>
     */
    private void clearValue() {
      bitField0_ = (bitField0_ & ~0x00000002);
      value_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, number_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, value_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, number_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Chanel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Chanel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Chanel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Chanel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Chanel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Chanel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Chanel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Chanel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Chanel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Chanel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Chanel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Сообщение регулировки для одного канала
     * </pre>
     *
     * Protobuf type {@code fito.Chanel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Chanel, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Chanel)
        ChanelOrBuilder {
      // Construct using fito.FitoChanels.Chanel.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 number = 1;</code>
       */
      public boolean hasNumber() {
        return instance.hasNumber();
      }
      /**
       * <code>required uint32 number = 1;</code>
       */
      public int getNumber() {
        return instance.getNumber();
      }
      /**
       * <code>required uint32 number = 1;</code>
       */
      public Builder setNumber(int value) {
        copyOnWrite();
        instance.setNumber(value);
        return this;
      }
      /**
       * <code>required uint32 number = 1;</code>
       */
      public Builder clearNumber() {
        copyOnWrite();
        instance.clearNumber();
        return this;
      }

      /**
       * <code>required uint32 value = 2 [default = 0];</code>
       */
      public boolean hasValue() {
        return instance.hasValue();
      }
      /**
       * <code>required uint32 value = 2 [default = 0];</code>
       */
      public int getValue() {
        return instance.getValue();
      }
      /**
       * <code>required uint32 value = 2 [default = 0];</code>
       */
      public Builder setValue(int value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <code>required uint32 value = 2 [default = 0];</code>
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Chanel)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Chanel();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasNumber()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasValue()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Chanel other = (Chanel) arg1;
          number_ = visitor.visitInt(
              hasNumber(), number_,
              other.hasNumber(), other.number_);
          value_ = visitor.visitInt(
              hasValue(), value_,
              other.hasValue(), other.value_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  number_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  value_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Chanel.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Chanel)
    private static final Chanel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Chanel();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Chanel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Chanel> PARSER;

    public static com.google.protobuf.Parser<Chanel> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChanelsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Chanels)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
     */
    boolean hasAction();
    /**
     * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
     */
    Chanels.Action getAction();

    /**
     * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    boolean hasAck();
    /**
     * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    Chanels.Ack getAck();

    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    java.util.List<Chanel>
        getChanelList();
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    Chanel getChanel(int index);
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    int getChanelCount();
  }
  /**
   * <pre>
   * Сообщение контейнер для всех шести каналов
   * </pre>
   *
   * Protobuf type {@code fito.Chanels}
   */
  public  static final class Chanels extends
      com.google.protobuf.GeneratedMessageLite<
          Chanels, Chanels.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Chanels)
      ChanelsOrBuilder {
    private Chanels() {
      action_ = 3;
      chanel_ = emptyProtobufList();
    }
    /**
     * Protobuf enum {@code fito.Chanels.Action}
     */
    public enum Action
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ACK = 0;</code>
       */
      ACK(0),
      /**
       * <code>GET = 1;</code>
       */
      GET(1),
      /**
       * <code>SET = 2;</code>
       */
      SET(2),
      /**
       * <code>VALUE = 3;</code>
       */
      VALUE(3),
      ;

      /**
       * <code>ACK = 0;</code>
       */
      public static final int ACK_VALUE = 0;
      /**
       * <code>GET = 1;</code>
       */
      public static final int GET_VALUE = 1;
      /**
       * <code>SET = 2;</code>
       */
      public static final int SET_VALUE = 2;
      /**
       * <code>VALUE = 3;</code>
       */
      public static final int VALUE_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Action valueOf(int value) {
        return forNumber(value);
      }

      public static Action forNumber(int value) {
        switch (value) {
          case 0: return ACK;
          case 1: return GET;
          case 2: return SET;
          case 3: return VALUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Action>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Action> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Action>() {
              public Action findValueByNumber(int number) {
                return Action.forNumber(number);
              }
            };

      private final int value;

      private Action(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Chanels.Action)
    }

    /**
     * Protobuf enum {@code fito.Chanels.Ack}
     */
    public enum Ack
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ACK_ACCEPTED = 0;</code>
       */
      ACK_ACCEPTED(0),
      /**
       * <code>ACK_VALUE_UNSUPPORTED = 1;</code>
       */
      ACK_VALUE_UNSUPPORTED(1),
      /**
       * <code>ACK_FAILED = 2;</code>
       */
      ACK_FAILED(2),
      /**
       * <code>ACK_IN_PROGRESS = 3;</code>
       */
      ACK_IN_PROGRESS(3),
      ;

      /**
       * <code>ACK_ACCEPTED = 0;</code>
       */
      public static final int ACK_ACCEPTED_VALUE = 0;
      /**
       * <code>ACK_VALUE_UNSUPPORTED = 1;</code>
       */
      public static final int ACK_VALUE_UNSUPPORTED_VALUE = 1;
      /**
       * <code>ACK_FAILED = 2;</code>
       */
      public static final int ACK_FAILED_VALUE = 2;
      /**
       * <code>ACK_IN_PROGRESS = 3;</code>
       */
      public static final int ACK_IN_PROGRESS_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Ack valueOf(int value) {
        return forNumber(value);
      }

      public static Ack forNumber(int value) {
        switch (value) {
          case 0: return ACK_ACCEPTED;
          case 1: return ACK_VALUE_UNSUPPORTED;
          case 2: return ACK_FAILED;
          case 3: return ACK_IN_PROGRESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Ack>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Ack> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Ack>() {
              public Ack findValueByNumber(int number) {
                return Ack.forNumber(number);
              }
            };

      private final int value;

      private Ack(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Chanels.Ack)
    }

    private int bitField0_;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
     */
    public Action getAction() {
      Action result = Action.forNumber(action_);
      return result == null ? Action.VALUE : result;
    }
    /**
     * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
     */
    private void setAction(Action value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      action_ = value.getNumber();
    }
    /**
     * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = 3;
    }

    public static final int ACK_FIELD_NUMBER = 2;
    private int ack_;
    /**
     * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    public Ack getAck() {
      Ack result = Ack.forNumber(ack_);
      return result == null ? Ack.ACK_ACCEPTED : result;
    }
    /**
     * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    private void setAck(Ack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      ack_ = value.getNumber();
    }
    /**
     * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    private void clearAck() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ack_ = 0;
    }

    public static final int CHANEL_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<Chanel> chanel_;
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    public java.util.List<Chanel> getChanelList() {
      return chanel_;
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    public java.util.List<? extends ChanelOrBuilder>
        getChanelOrBuilderList() {
      return chanel_;
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    public int getChanelCount() {
      return chanel_.size();
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    public Chanel getChanel(int index) {
      return chanel_.get(index);
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    public ChanelOrBuilder getChanelOrBuilder(
        int index) {
      return chanel_.get(index);
    }
    private void ensureChanelIsMutable() {
      if (!chanel_.isModifiable()) {
        chanel_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(chanel_);
       }
    }

    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void setChanel(
        int index, Chanel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChanelIsMutable();
      chanel_.set(index, value);
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void setChanel(
        int index, Chanel.Builder builderForValue) {
      ensureChanelIsMutable();
      chanel_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void addChanel(Chanel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChanelIsMutable();
      chanel_.add(value);
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void addChanel(
        int index, Chanel value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChanelIsMutable();
      chanel_.add(index, value);
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void addChanel(
        Chanel.Builder builderForValue) {
      ensureChanelIsMutable();
      chanel_.add(builderForValue.build());
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void addChanel(
        int index, Chanel.Builder builderForValue) {
      ensureChanelIsMutable();
      chanel_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void addAllChanel(
        Iterable<? extends Chanel> values) {
      ensureChanelIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, chanel_);
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void clearChanel() {
      chanel_ = emptyProtobufList();
    }
    /**
     * <code>repeated .fito.Chanel chanel = 3;</code>
     */
    private void removeChanel(int index) {
      ensureChanelIsMutable();
      chanel_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, ack_);
      }
      for (int i = 0; i < chanel_.size(); i++) {
        output.writeMessage(3, chanel_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ack_);
      }
      for (int i = 0; i < chanel_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, chanel_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Chanels parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Chanels parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Chanels parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Chanels parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Chanels parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Chanels parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Chanels parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Chanels parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Chanels parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Chanels parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Chanels prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Сообщение контейнер для всех шести каналов
     * </pre>
     *
     * Protobuf type {@code fito.Chanels}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Chanels, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Chanels)
        ChanelsOrBuilder {
      // Construct using fito.FitoChanels.Chanels.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
       */
      public Action getAction() {
        return instance.getAction();
      }
      /**
       * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
       */
      public Builder setAction(Action value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <code>required .fito.Chanels.Action action = 1 [default = VALUE];</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public boolean hasAck() {
        return instance.hasAck();
      }
      /**
       * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Ack getAck() {
        return instance.getAck();
      }
      /**
       * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Builder setAck(Ack value) {
        copyOnWrite();
        instance.setAck(value);
        return this;
      }
      /**
       * <code>required .fito.Chanels.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Builder clearAck() {
        copyOnWrite();
        instance.clearAck();
        return this;
      }

      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public java.util.List<Chanel> getChanelList() {
        return java.util.Collections.unmodifiableList(
            instance.getChanelList());
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public int getChanelCount() {
        return instance.getChanelCount();
      }/**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Chanel getChanel(int index) {
        return instance.getChanel(index);
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder setChanel(
          int index, Chanel value) {
        copyOnWrite();
        instance.setChanel(index, value);
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder setChanel(
          int index, Chanel.Builder builderForValue) {
        copyOnWrite();
        instance.setChanel(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder addChanel(Chanel value) {
        copyOnWrite();
        instance.addChanel(value);
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder addChanel(
          int index, Chanel value) {
        copyOnWrite();
        instance.addChanel(index, value);
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder addChanel(
          Chanel.Builder builderForValue) {
        copyOnWrite();
        instance.addChanel(builderForValue);
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder addChanel(
          int index, Chanel.Builder builderForValue) {
        copyOnWrite();
        instance.addChanel(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder addAllChanel(
          Iterable<? extends Chanel> values) {
        copyOnWrite();
        instance.addAllChanel(values);
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder clearChanel() {
        copyOnWrite();
        instance.clearChanel();
        return this;
      }
      /**
       * <code>repeated .fito.Chanel chanel = 3;</code>
       */
      public Builder removeChanel(int index) {
        copyOnWrite();
        instance.removeChanel(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Chanels)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Chanels();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAck()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getChanelCount(); i++) {
            if (!getChanel(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          chanel_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Chanels other = (Chanels) arg1;
          action_ = visitor.visitInt(hasAction(), action_,
              other.hasAction(), other.action_);
          ack_ = visitor.visitInt(hasAck(), ack_,
              other.hasAck(), other.ack_);
          chanel_= visitor.visitList(chanel_, other.chanel_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  Action value = Action.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    action_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  Ack value = Ack.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    ack_ = rawValue;
                  }
                  break;
                }
                case 26: {
                  if (!chanel_.isModifiable()) {
                    chanel_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(chanel_);
                  }
                  chanel_.add(
                      input.readMessage(Chanel.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Chanels.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Chanels)
    private static final Chanels DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Chanels();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Chanels getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Chanels> PARSER;

    public static com.google.protobuf.Parser<Chanels> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
