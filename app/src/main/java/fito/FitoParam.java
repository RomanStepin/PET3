// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fito_param.proto

package fito;

public final class FitoParam {
  private FitoParam() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SysIDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.SysID)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 sysID = 1;</code>
     */
    boolean hasSysID();
    /**
     * <code>required uint32 sysID = 1;</code>
     */
    int getSysID();
  }
  /**
   * <pre>
   * Текущий SysID
   * </pre>
   *
   * Protobuf type {@code fito.SysID}
   */
  public  static final class SysID extends
      com.google.protobuf.GeneratedMessageLite<
          SysID, SysID.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.SysID)
      SysIDOrBuilder {
    private SysID() {
    }
    private int bitField0_;
    public static final int SYSID_FIELD_NUMBER = 1;
    private int sysID_;
    /**
     * <code>required uint32 sysID = 1;</code>
     */
    public boolean hasSysID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 sysID = 1;</code>
     */
    public int getSysID() {
      return sysID_;
    }
    /**
     * <code>required uint32 sysID = 1;</code>
     */
    private void setSysID(int value) {
      bitField0_ |= 0x00000001;
      sysID_ = value;
    }
    /**
     * <code>required uint32 sysID = 1;</code>
     */
    private void clearSysID() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sysID_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sysID_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sysID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static SysID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static SysID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static SysID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static SysID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static SysID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static SysID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static SysID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static SysID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static SysID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static SysID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SysID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Текущий SysID
     * </pre>
     *
     * Protobuf type {@code fito.SysID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          SysID, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.SysID)
        SysIDOrBuilder {
      // Construct using fito.FitoParam.SysID.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 sysID = 1;</code>
       */
      public boolean hasSysID() {
        return instance.hasSysID();
      }
      /**
       * <code>required uint32 sysID = 1;</code>
       */
      public int getSysID() {
        return instance.getSysID();
      }
      /**
       * <code>required uint32 sysID = 1;</code>
       */
      public Builder setSysID(int value) {
        copyOnWrite();
        instance.setSysID(value);
        return this;
      }
      /**
       * <code>required uint32 sysID = 1;</code>
       */
      public Builder clearSysID() {
        copyOnWrite();
        instance.clearSysID();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.SysID)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new SysID();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasSysID()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          SysID other = (SysID) arg1;
          sysID_ = visitor.visitInt(
              hasSysID(), sysID_,
              other.hasSysID(), other.sysID_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  sysID_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (SysID.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.SysID)
    private static final SysID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SysID();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static SysID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SysID> PARSER;

    public static com.google.protobuf.Parser<SysID> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TimeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Time)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <code>required uint32 time = 1;</code>
     */
    int getTime();
  }
  /**
   * <pre>
   * Текущее время
   * </pre>
   *
   * Protobuf type {@code fito.Time}
   */
  public  static final class Time extends
      com.google.protobuf.GeneratedMessageLite<
          Time, Time.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Time)
      TimeOrBuilder {
    private Time() {
    }
    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private int time_;
    /**
     * <code>required uint32 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 time = 1;</code>
     */
    public int getTime() {
      return time_;
    }
    /**
     * <code>required uint32 time = 1;</code>
     */
    private void setTime(int value) {
      bitField0_ |= 0x00000001;
      time_ = value;
    }
    /**
     * <code>required uint32 time = 1;</code>
     */
    private void clearTime() {
      bitField0_ = (bitField0_ & ~0x00000001);
      time_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, time_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, time_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Time parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Time parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Time parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Time parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Time parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Time parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Time parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Time parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Time parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Time parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Time prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Текущее время
     * </pre>
     *
     * Protobuf type {@code fito.Time}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Time, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Time)
        TimeOrBuilder {
      // Construct using fito.FitoParam.Time.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 time = 1;</code>
       */
      public boolean hasTime() {
        return instance.hasTime();
      }
      /**
       * <code>required uint32 time = 1;</code>
       */
      public int getTime() {
        return instance.getTime();
      }
      /**
       * <code>required uint32 time = 1;</code>
       */
      public Builder setTime(int value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <code>required uint32 time = 1;</code>
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Time)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Time();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasTime()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Time other = (Time) arg1;
          time_ = visitor.visitInt(
              hasTime(), time_,
              other.hasTime(), other.time_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  time_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Time.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Time)
    private static final Time DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Time();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Time getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Time> PARSER;

    public static com.google.protobuf.Parser<Time> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WiFiAuthOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.WiFiAuth)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string ssid = 1;</code>
     */
    boolean hasSsid();
    /**
     * <code>required string ssid = 1;</code>
     */
    String getSsid();
    /**
     * <code>required string ssid = 1;</code>
     */
    com.google.protobuf.ByteString
        getSsidBytes();

    /**
     * <code>required string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 2;</code>
     */
    String getPassword();
    /**
     * <code>required string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * <pre>
   * Настройки авторизации в WiFi сети
   * </pre>
   *
   * Protobuf type {@code fito.WiFiAuth}
   */
  public  static final class WiFiAuth extends
      com.google.protobuf.GeneratedMessageLite<
          WiFiAuth, WiFiAuth.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.WiFiAuth)
      WiFiAuthOrBuilder {
    private WiFiAuth() {
      ssid_ = "";
      password_ = "";
    }
    private int bitField0_;
    public static final int SSID_FIELD_NUMBER = 1;
    private String ssid_;
    /**
     * <code>required string ssid = 1;</code>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string ssid = 1;</code>
     */
    public String getSsid() {
      return ssid_;
    }
    /**
     * <code>required string ssid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSsidBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ssid_);
    }
    /**
     * <code>required string ssid = 1;</code>
     */
    private void setSsid(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ssid_ = value;
    }
    /**
     * <code>required string ssid = 1;</code>
     */
    private void clearSsid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      ssid_ = getDefaultInstance().getSsid();
    }
    /**
     * <code>required string ssid = 1;</code>
     */
    private void setSsidBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      ssid_ = value.toStringUtf8();
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private String password_;
    /**
     * <code>required string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string password = 2;</code>
     */
    public String getPassword() {
      return password_;
    }
    /**
     * <code>required string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(password_);
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void setPassword(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value;
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void clearPassword() {
      bitField0_ = (bitField0_ & ~0x00000002);
      password_ = getDefaultInstance().getPassword();
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getSsid());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPassword());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSsid());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPassword());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static WiFiAuth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static WiFiAuth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static WiFiAuth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static WiFiAuth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static WiFiAuth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static WiFiAuth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static WiFiAuth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static WiFiAuth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static WiFiAuth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static WiFiAuth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(WiFiAuth prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Настройки авторизации в WiFi сети
     * </pre>
     *
     * Protobuf type {@code fito.WiFiAuth}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          WiFiAuth, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.WiFiAuth)
        WiFiAuthOrBuilder {
      // Construct using fito.FitoParam.WiFiAuth.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string ssid = 1;</code>
       */
      public boolean hasSsid() {
        return instance.hasSsid();
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public String getSsid() {
        return instance.getSsid();
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSsidBytes() {
        return instance.getSsidBytes();
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public Builder setSsid(
          String value) {
        copyOnWrite();
        instance.setSsid(value);
        return this;
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public Builder clearSsid() {
        copyOnWrite();
        instance.clearSsid();
        return this;
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public Builder setSsidBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSsidBytes(value);
        return this;
      }

      /**
       * <code>required string password = 2;</code>
       */
      public boolean hasPassword() {
        return instance.hasPassword();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public String getPassword() {
        return instance.getPassword();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        return instance.getPasswordBytes();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPassword(
          String value) {
        copyOnWrite();
        instance.setPassword(value);
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder clearPassword() {
        copyOnWrite();
        instance.clearPassword();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPasswordBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.WiFiAuth)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new WiFiAuth();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasSsid()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPassword()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          WiFiAuth other = (WiFiAuth) arg1;
          ssid_ = visitor.visitString(
              hasSsid(), ssid_,
              other.hasSsid(), other.ssid_);
          password_ = visitor.visitString(
              hasPassword(), password_,
              other.hasPassword(), other.password_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  ssid_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  password_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (WiFiAuth.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.WiFiAuth)
    private static final WiFiAuth DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new WiFiAuth();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static WiFiAuth getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WiFiAuth> PARSER;

    public static com.google.protobuf.Parser<WiFiAuth> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LanSettingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.LanSetting)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required bool useDHCP = 1;</code>
     */
    boolean hasUseDHCP();
    /**
     * <code>required bool useDHCP = 1;</code>
     */
    boolean getUseDHCP();

    /**
     * <code>required string ip = 2;</code>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 2;</code>
     */
    String getIp();
    /**
     * <code>required string ip = 2;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>required string mask = 3;</code>
     */
    boolean hasMask();
    /**
     * <code>required string mask = 3;</code>
     */
    String getMask();
    /**
     * <code>required string mask = 3;</code>
     */
    com.google.protobuf.ByteString
        getMaskBytes();

    /**
     * <code>required string gateware = 4;</code>
     */
    boolean hasGateware();
    /**
     * <code>required string gateware = 4;</code>
     */
    String getGateware();
    /**
     * <code>required string gateware = 4;</code>
     */
    com.google.protobuf.ByteString
        getGatewareBytes();
  }
  /**
   * <pre>
   * Настройки сети
   * </pre>
   *
   * Protobuf type {@code fito.LanSetting}
   */
  public  static final class LanSetting extends
      com.google.protobuf.GeneratedMessageLite<
          LanSetting, LanSetting.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.LanSetting)
      LanSettingOrBuilder {
    private LanSetting() {
      ip_ = "";
      mask_ = "";
      gateware_ = "";
    }
    private int bitField0_;
    public static final int USEDHCP_FIELD_NUMBER = 1;
    private boolean useDHCP_;
    /**
     * <code>required bool useDHCP = 1;</code>
     */
    public boolean hasUseDHCP() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool useDHCP = 1;</code>
     */
    public boolean getUseDHCP() {
      return useDHCP_;
    }
    /**
     * <code>required bool useDHCP = 1;</code>
     */
    private void setUseDHCP(boolean value) {
      bitField0_ |= 0x00000001;
      useDHCP_ = value;
    }
    /**
     * <code>required bool useDHCP = 1;</code>
     */
    private void clearUseDHCP() {
      bitField0_ = (bitField0_ & ~0x00000001);
      useDHCP_ = false;
    }

    public static final int IP_FIELD_NUMBER = 2;
    private String ip_;
    /**
     * <code>required string ip = 2;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ip = 2;</code>
     */
    public String getIp() {
      return ip_;
    }
    /**
     * <code>required string ip = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(ip_);
    }
    /**
     * <code>required string ip = 2;</code>
     */
    private void setIp(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ip_ = value;
    }
    /**
     * <code>required string ip = 2;</code>
     */
    private void clearIp() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ip_ = getDefaultInstance().getIp();
    }
    /**
     * <code>required string ip = 2;</code>
     */
    private void setIpBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      ip_ = value.toStringUtf8();
    }

    public static final int MASK_FIELD_NUMBER = 3;
    private String mask_;
    /**
     * <code>required string mask = 3;</code>
     */
    public boolean hasMask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string mask = 3;</code>
     */
    public String getMask() {
      return mask_;
    }
    /**
     * <code>required string mask = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMaskBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(mask_);
    }
    /**
     * <code>required string mask = 3;</code>
     */
    private void setMask(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      mask_ = value;
    }
    /**
     * <code>required string mask = 3;</code>
     */
    private void clearMask() {
      bitField0_ = (bitField0_ & ~0x00000004);
      mask_ = getDefaultInstance().getMask();
    }
    /**
     * <code>required string mask = 3;</code>
     */
    private void setMaskBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      mask_ = value.toStringUtf8();
    }

    public static final int GATEWARE_FIELD_NUMBER = 4;
    private String gateware_;
    /**
     * <code>required string gateware = 4;</code>
     */
    public boolean hasGateware() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string gateware = 4;</code>
     */
    public String getGateware() {
      return gateware_;
    }
    /**
     * <code>required string gateware = 4;</code>
     */
    public com.google.protobuf.ByteString
        getGatewareBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(gateware_);
    }
    /**
     * <code>required string gateware = 4;</code>
     */
    private void setGateware(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      gateware_ = value;
    }
    /**
     * <code>required string gateware = 4;</code>
     */
    private void clearGateware() {
      bitField0_ = (bitField0_ & ~0x00000008);
      gateware_ = getDefaultInstance().getGateware();
    }
    /**
     * <code>required string gateware = 4;</code>
     */
    private void setGatewareBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      gateware_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, useDHCP_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getIp());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeString(3, getMask());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeString(4, getGateware());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, useDHCP_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getIp());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMask());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getGateware());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static LanSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static LanSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static LanSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static LanSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static LanSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static LanSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static LanSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static LanSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static LanSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static LanSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(LanSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Настройки сети
     * </pre>
     *
     * Protobuf type {@code fito.LanSetting}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          LanSetting, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.LanSetting)
        LanSettingOrBuilder {
      // Construct using fito.FitoParam.LanSetting.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required bool useDHCP = 1;</code>
       */
      public boolean hasUseDHCP() {
        return instance.hasUseDHCP();
      }
      /**
       * <code>required bool useDHCP = 1;</code>
       */
      public boolean getUseDHCP() {
        return instance.getUseDHCP();
      }
      /**
       * <code>required bool useDHCP = 1;</code>
       */
      public Builder setUseDHCP(boolean value) {
        copyOnWrite();
        instance.setUseDHCP(value);
        return this;
      }
      /**
       * <code>required bool useDHCP = 1;</code>
       */
      public Builder clearUseDHCP() {
        copyOnWrite();
        instance.clearUseDHCP();
        return this;
      }

      /**
       * <code>required string ip = 2;</code>
       */
      public boolean hasIp() {
        return instance.hasIp();
      }
      /**
       * <code>required string ip = 2;</code>
       */
      public String getIp() {
        return instance.getIp();
      }
      /**
       * <code>required string ip = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        return instance.getIpBytes();
      }
      /**
       * <code>required string ip = 2;</code>
       */
      public Builder setIp(
          String value) {
        copyOnWrite();
        instance.setIp(value);
        return this;
      }
      /**
       * <code>required string ip = 2;</code>
       */
      public Builder clearIp() {
        copyOnWrite();
        instance.clearIp();
        return this;
      }
      /**
       * <code>required string ip = 2;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setIpBytes(value);
        return this;
      }

      /**
       * <code>required string mask = 3;</code>
       */
      public boolean hasMask() {
        return instance.hasMask();
      }
      /**
       * <code>required string mask = 3;</code>
       */
      public String getMask() {
        return instance.getMask();
      }
      /**
       * <code>required string mask = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMaskBytes() {
        return instance.getMaskBytes();
      }
      /**
       * <code>required string mask = 3;</code>
       */
      public Builder setMask(
          String value) {
        copyOnWrite();
        instance.setMask(value);
        return this;
      }
      /**
       * <code>required string mask = 3;</code>
       */
      public Builder clearMask() {
        copyOnWrite();
        instance.clearMask();
        return this;
      }
      /**
       * <code>required string mask = 3;</code>
       */
      public Builder setMaskBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMaskBytes(value);
        return this;
      }

      /**
       * <code>required string gateware = 4;</code>
       */
      public boolean hasGateware() {
        return instance.hasGateware();
      }
      /**
       * <code>required string gateware = 4;</code>
       */
      public String getGateware() {
        return instance.getGateware();
      }
      /**
       * <code>required string gateware = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGatewareBytes() {
        return instance.getGatewareBytes();
      }
      /**
       * <code>required string gateware = 4;</code>
       */
      public Builder setGateware(
          String value) {
        copyOnWrite();
        instance.setGateware(value);
        return this;
      }
      /**
       * <code>required string gateware = 4;</code>
       */
      public Builder clearGateware() {
        copyOnWrite();
        instance.clearGateware();
        return this;
      }
      /**
       * <code>required string gateware = 4;</code>
       */
      public Builder setGatewareBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setGatewareBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.LanSetting)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new LanSetting();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasUseDHCP()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasIp()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasMask()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasGateware()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          LanSetting other = (LanSetting) arg1;
          useDHCP_ = visitor.visitBoolean(
              hasUseDHCP(), useDHCP_,
              other.hasUseDHCP(), other.useDHCP_);
          ip_ = visitor.visitString(
              hasIp(), ip_,
              other.hasIp(), other.ip_);
          mask_ = visitor.visitString(
              hasMask(), mask_,
              other.hasMask(), other.mask_);
          gateware_ = visitor.visitString(
              hasGateware(), gateware_,
              other.hasGateware(), other.gateware_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  useDHCP_ = input.readBool();
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  ip_ = s;
                  break;
                }
                case 26: {
                  String s = input.readString();
                  bitField0_ |= 0x00000004;
                  mask_ = s;
                  break;
                }
                case 34: {
                  String s = input.readString();
                  bitField0_ |= 0x00000008;
                  gateware_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (LanSetting.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.LanSetting)
    private static final LanSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LanSetting();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static LanSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LanSetting> PARSER;

    public static com.google.protobuf.Parser<LanSetting> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MQTTAuthOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.MQTTAuth)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string login = 1;</code>
     */
    boolean hasLogin();
    /**
     * <code>required string login = 1;</code>
     */
    String getLogin();
    /**
     * <code>required string login = 1;</code>
     */
    com.google.protobuf.ByteString
        getLoginBytes();

    /**
     * <code>required string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 2;</code>
     */
    String getPassword();
    /**
     * <code>required string password = 2;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();
  }
  /**
   * <pre>
   * Настройки авторизации на MQTT сервере
   * </pre>
   *
   * Protobuf type {@code fito.MQTTAuth}
   */
  public  static final class MQTTAuth extends
      com.google.protobuf.GeneratedMessageLite<
          MQTTAuth, MQTTAuth.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.MQTTAuth)
      MQTTAuthOrBuilder {
    private MQTTAuth() {
      login_ = "";
      password_ = "";
    }
    private int bitField0_;
    public static final int LOGIN_FIELD_NUMBER = 1;
    private String login_;
    /**
     * <code>required string login = 1;</code>
     */
    public boolean hasLogin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string login = 1;</code>
     */
    public String getLogin() {
      return login_;
    }
    /**
     * <code>required string login = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLoginBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(login_);
    }
    /**
     * <code>required string login = 1;</code>
     */
    private void setLogin(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      login_ = value;
    }
    /**
     * <code>required string login = 1;</code>
     */
    private void clearLogin() {
      bitField0_ = (bitField0_ & ~0x00000001);
      login_ = getDefaultInstance().getLogin();
    }
    /**
     * <code>required string login = 1;</code>
     */
    private void setLoginBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      login_ = value.toStringUtf8();
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private String password_;
    /**
     * <code>required string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string password = 2;</code>
     */
    public String getPassword() {
      return password_;
    }
    /**
     * <code>required string password = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(password_);
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void setPassword(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value;
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void clearPassword() {
      bitField0_ = (bitField0_ & ~0x00000002);
      password_ = getDefaultInstance().getPassword();
    }
    /**
     * <code>required string password = 2;</code>
     */
    private void setPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      password_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getLogin());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeString(2, getPassword());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLogin());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPassword());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static MQTTAuth parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MQTTAuth parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MQTTAuth parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static MQTTAuth parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static MQTTAuth parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MQTTAuth parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MQTTAuth parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static MQTTAuth parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static MQTTAuth parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static MQTTAuth parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MQTTAuth prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Настройки авторизации на MQTT сервере
     * </pre>
     *
     * Protobuf type {@code fito.MQTTAuth}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          MQTTAuth, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.MQTTAuth)
        MQTTAuthOrBuilder {
      // Construct using fito.FitoParam.MQTTAuth.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string login = 1;</code>
       */
      public boolean hasLogin() {
        return instance.hasLogin();
      }
      /**
       * <code>required string login = 1;</code>
       */
      public String getLogin() {
        return instance.getLogin();
      }
      /**
       * <code>required string login = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLoginBytes() {
        return instance.getLoginBytes();
      }
      /**
       * <code>required string login = 1;</code>
       */
      public Builder setLogin(
          String value) {
        copyOnWrite();
        instance.setLogin(value);
        return this;
      }
      /**
       * <code>required string login = 1;</code>
       */
      public Builder clearLogin() {
        copyOnWrite();
        instance.clearLogin();
        return this;
      }
      /**
       * <code>required string login = 1;</code>
       */
      public Builder setLoginBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLoginBytes(value);
        return this;
      }

      /**
       * <code>required string password = 2;</code>
       */
      public boolean hasPassword() {
        return instance.hasPassword();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public String getPassword() {
        return instance.getPassword();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        return instance.getPasswordBytes();
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPassword(
          String value) {
        copyOnWrite();
        instance.setPassword(value);
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder clearPassword() {
        copyOnWrite();
        instance.clearPassword();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPasswordBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.MQTTAuth)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new MQTTAuth();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasLogin()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPassword()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          MQTTAuth other = (MQTTAuth) arg1;
          login_ = visitor.visitString(
              hasLogin(), login_,
              other.hasLogin(), other.login_);
          password_ = visitor.visitString(
              hasPassword(), password_,
              other.hasPassword(), other.password_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  login_ = s;
                  break;
                }
                case 18: {
                  String s = input.readString();
                  bitField0_ |= 0x00000002;
                  password_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (MQTTAuth.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.MQTTAuth)
    private static final MQTTAuth DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MQTTAuth();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static MQTTAuth getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MQTTAuth> PARSER;

    public static com.google.protobuf.Parser<MQTTAuth> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LampConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.LampConfig)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    java.util.List<Integer> getChannelsList();
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    int getChannelsCount();
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    int getChannels(int index);

    /**
     * <code>required uint32 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required uint32 timestamp = 2;</code>
     */
    int getTimestamp();

    /**
     * <code>required uint32 smoothing_duration = 3;</code>
     */
    boolean hasSmoothingDuration();
    /**
     * <code>required uint32 smoothing_duration = 3;</code>
     */
    int getSmoothingDuration();
  }
  /**
   * <pre>
   * Настройки конфигурации лампы
   * </pre>
   *
   * Protobuf type {@code fito.LampConfig}
   */
  public  static final class LampConfig extends
      com.google.protobuf.GeneratedMessageLite<
          LampConfig, LampConfig.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.LampConfig)
      LampConfigOrBuilder {
    private LampConfig() {
      channels_ = emptyIntList();
    }
    private int bitField0_;
    public static final int CHANNELS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList channels_;
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    public java.util.List<Integer>
        getChannelsList() {
      return channels_;
    }
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    public int getChannels(int index) {
      return channels_.getInt(index);
    }
    private void ensureChannelsIsMutable() {
      if (!channels_.isModifiable()) {
        channels_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(channels_);
       }
    }
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    private void setChannels(
        int index, int value) {
      ensureChannelsIsMutable();
      channels_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    private void addChannels(int value) {
      ensureChannelsIsMutable();
      channels_.addInt(value);
    }
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    private void addAllChannels(
        Iterable<? extends Integer> values) {
      ensureChannelsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, channels_);
    }
    /**
     * <code>repeated uint32 channels = 1;</code>
     */
    private void clearChannels() {
      channels_ = emptyIntList();
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>required uint32 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 timestamp = 2;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>required uint32 timestamp = 2;</code>
     */
    private void setTimestamp(int value) {
      bitField0_ |= 0x00000001;
      timestamp_ = value;
    }
    /**
     * <code>required uint32 timestamp = 2;</code>
     */
    private void clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000001);
      timestamp_ = 0;
    }

    public static final int SMOOTHING_DURATION_FIELD_NUMBER = 3;
    private int smoothingDuration_;
    /**
     * <code>required uint32 smoothing_duration = 3;</code>
     */
    public boolean hasSmoothingDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 smoothing_duration = 3;</code>
     */
    public int getSmoothingDuration() {
      return smoothingDuration_;
    }
    /**
     * <code>required uint32 smoothing_duration = 3;</code>
     */
    private void setSmoothingDuration(int value) {
      bitField0_ |= 0x00000002;
      smoothingDuration_ = value;
    }
    /**
     * <code>required uint32 smoothing_duration = 3;</code>
     */
    private void clearSmoothingDuration() {
      bitField0_ = (bitField0_ & ~0x00000002);
      smoothingDuration_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < channels_.size(); i++) {
        output.writeUInt32(1, channels_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, smoothingDuration_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < channels_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(channels_.getInt(i));
        }
        size += dataSize;
        size += 1 * getChannelsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, smoothingDuration_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static LampConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static LampConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static LampConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static LampConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static LampConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static LampConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static LampConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static LampConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static LampConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static LampConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(LampConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Настройки конфигурации лампы
     * </pre>
     *
     * Protobuf type {@code fito.LampConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          LampConfig, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.LampConfig)
        LampConfigOrBuilder {
      // Construct using fito.FitoParam.LampConfig.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated uint32 channels = 1;</code>
       */
      public java.util.List<Integer>
          getChannelsList() {
        return java.util.Collections.unmodifiableList(
            instance.getChannelsList());
      }
      /**
       * <code>repeated uint32 channels = 1;</code>
       */
      public int getChannelsCount() {
        return instance.getChannelsCount();
      }
      /**
       * <code>repeated uint32 channels = 1;</code>
       */
      public int getChannels(int index) {
        return instance.getChannels(index);
      }
      /**
       * <code>repeated uint32 channels = 1;</code>
       */
      public Builder setChannels(
          int index, int value) {
        copyOnWrite();
        instance.setChannels(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 channels = 1;</code>
       */
      public Builder addChannels(int value) {
        copyOnWrite();
        instance.addChannels(value);
        return this;
      }
      /**
       * <code>repeated uint32 channels = 1;</code>
       */
      public Builder addAllChannels(
          Iterable<? extends Integer> values) {
        copyOnWrite();
        instance.addAllChannels(values);
        return this;
      }
      /**
       * <code>repeated uint32 channels = 1;</code>
       */
      public Builder clearChannels() {
        copyOnWrite();
        instance.clearChannels();
        return this;
      }

      /**
       * <code>required uint32 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return instance.hasTimestamp();
      }
      /**
       * <code>required uint32 timestamp = 2;</code>
       */
      public int getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <code>required uint32 timestamp = 2;</code>
       */
      public Builder setTimestamp(int value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
      }
      /**
       * <code>required uint32 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <code>required uint32 smoothing_duration = 3;</code>
       */
      public boolean hasSmoothingDuration() {
        return instance.hasSmoothingDuration();
      }
      /**
       * <code>required uint32 smoothing_duration = 3;</code>
       */
      public int getSmoothingDuration() {
        return instance.getSmoothingDuration();
      }
      /**
       * <code>required uint32 smoothing_duration = 3;</code>
       */
      public Builder setSmoothingDuration(int value) {
        copyOnWrite();
        instance.setSmoothingDuration(value);
        return this;
      }
      /**
       * <code>required uint32 smoothing_duration = 3;</code>
       */
      public Builder clearSmoothingDuration() {
        copyOnWrite();
        instance.clearSmoothingDuration();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.LampConfig)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new LampConfig();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasTimestamp()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasSmoothingDuration()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          channels_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          LampConfig other = (LampConfig) arg1;
          channels_= visitor.visitIntList(channels_, other.channels_);
          timestamp_ = visitor.visitInt(
              hasTimestamp(), timestamp_,
              other.hasTimestamp(), other.timestamp_);
          smoothingDuration_ = visitor.visitInt(
              hasSmoothingDuration(), smoothingDuration_,
              other.hasSmoothingDuration(), other.smoothingDuration_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  if (!channels_.isModifiable()) {
                    channels_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(channels_);
                  }
                  channels_.addInt(input.readUInt32());
                  break;
                }
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!channels_.isModifiable() && input.getBytesUntilLimit() > 0) {
                    channels_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(channels_);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    channels_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  timestamp_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  smoothingDuration_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (LampConfig.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.LampConfig)
    private static final LampConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new LampConfig();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static LampConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LampConfig> PARSER;

    public static com.google.protobuf.Parser<LampConfig> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PresetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Preset)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    java.util.List<LampConfig>
        getConfigsList();
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    LampConfig getConfigs(int index);
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    int getConfigsCount();

    /**
     * <code>required uint32 duration = 2;</code>
     */
    boolean hasDuration();
    /**
     * <code>required uint32 duration = 2;</code>
     */
    int getDuration();

    /**
     * <code>required uint32 preset_number = 3;</code>
     */
    boolean hasPresetNumber();
    /**
     * <code>required uint32 preset_number = 3;</code>
     */
    int getPresetNumber();

    /**
     * <code>required uint32 presets_count = 4;</code>
     */
    boolean hasPresetsCount();
    /**
     * <code>required uint32 presets_count = 4;</code>
     */
    int getPresetsCount();
  }
  /**
   * <pre>
   * Настройки пресета лампы
   * </pre>
   *
   * Protobuf type {@code fito.Preset}
   */
  public  static final class Preset extends
      com.google.protobuf.GeneratedMessageLite<
          Preset, Preset.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Preset)
      PresetOrBuilder {
    private Preset() {
      configs_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int CONFIGS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<LampConfig> configs_;
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    public java.util.List<LampConfig> getConfigsList() {
      return configs_;
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    public java.util.List<? extends LampConfigOrBuilder>
        getConfigsOrBuilderList() {
      return configs_;
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    public int getConfigsCount() {
      return configs_.size();
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    public LampConfig getConfigs(int index) {
      return configs_.get(index);
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    public LampConfigOrBuilder getConfigsOrBuilder(
        int index) {
      return configs_.get(index);
    }
    private void ensureConfigsIsMutable() {
      if (!configs_.isModifiable()) {
        configs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(configs_);
       }
    }

    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void setConfigs(
        int index, LampConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConfigsIsMutable();
      configs_.set(index, value);
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void setConfigs(
        int index, LampConfig.Builder builderForValue) {
      ensureConfigsIsMutable();
      configs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void addConfigs(LampConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConfigsIsMutable();
      configs_.add(value);
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void addConfigs(
        int index, LampConfig value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureConfigsIsMutable();
      configs_.add(index, value);
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void addConfigs(
        LampConfig.Builder builderForValue) {
      ensureConfigsIsMutable();
      configs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void addConfigs(
        int index, LampConfig.Builder builderForValue) {
      ensureConfigsIsMutable();
      configs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void addAllConfigs(
        Iterable<? extends LampConfig> values) {
      ensureConfigsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, configs_);
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void clearConfigs() {
      configs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .fito.LampConfig configs = 1;</code>
     */
    private void removeConfigs(int index) {
      ensureConfigsIsMutable();
      configs_.remove(index);
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private int duration_;
    /**
     * <code>required uint32 duration = 2;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 duration = 2;</code>
     */
    public int getDuration() {
      return duration_;
    }
    /**
     * <code>required uint32 duration = 2;</code>
     */
    private void setDuration(int value) {
      bitField0_ |= 0x00000001;
      duration_ = value;
    }
    /**
     * <code>required uint32 duration = 2;</code>
     */
    private void clearDuration() {
      bitField0_ = (bitField0_ & ~0x00000001);
      duration_ = 0;
    }

    public static final int PRESET_NUMBER_FIELD_NUMBER = 3;
    private int presetNumber_;
    /**
     * <code>required uint32 preset_number = 3;</code>
     */
    public boolean hasPresetNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 preset_number = 3;</code>
     */
    public int getPresetNumber() {
      return presetNumber_;
    }
    /**
     * <code>required uint32 preset_number = 3;</code>
     */
    private void setPresetNumber(int value) {
      bitField0_ |= 0x00000002;
      presetNumber_ = value;
    }
    /**
     * <code>required uint32 preset_number = 3;</code>
     */
    private void clearPresetNumber() {
      bitField0_ = (bitField0_ & ~0x00000002);
      presetNumber_ = 0;
    }

    public static final int PRESETS_COUNT_FIELD_NUMBER = 4;
    private int presetsCount_;
    /**
     * <code>required uint32 presets_count = 4;</code>
     */
    public boolean hasPresetsCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 presets_count = 4;</code>
     */
    public int getPresetsCount() {
      return presetsCount_;
    }
    /**
     * <code>required uint32 presets_count = 4;</code>
     */
    private void setPresetsCount(int value) {
      bitField0_ |= 0x00000004;
      presetsCount_ = value;
    }
    /**
     * <code>required uint32 presets_count = 4;</code>
     */
    private void clearPresetsCount() {
      bitField0_ = (bitField0_ & ~0x00000004);
      presetsCount_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < configs_.size(); i++) {
        output.writeMessage(1, configs_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, duration_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, presetNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, presetsCount_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < configs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, configs_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, duration_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, presetNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, presetsCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Preset parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Preset parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Preset parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Preset parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Preset parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Preset parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Preset parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Preset parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Preset parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Preset parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Preset prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Настройки пресета лампы
     * </pre>
     *
     * Protobuf type {@code fito.Preset}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Preset, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Preset)
        PresetOrBuilder {
      // Construct using fito.FitoParam.Preset.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public java.util.List<LampConfig> getConfigsList() {
        return java.util.Collections.unmodifiableList(
            instance.getConfigsList());
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public int getConfigsCount() {
        return instance.getConfigsCount();
      }/**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public LampConfig getConfigs(int index) {
        return instance.getConfigs(index);
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder setConfigs(
          int index, LampConfig value) {
        copyOnWrite();
        instance.setConfigs(index, value);
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder setConfigs(
          int index, LampConfig.Builder builderForValue) {
        copyOnWrite();
        instance.setConfigs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder addConfigs(LampConfig value) {
        copyOnWrite();
        instance.addConfigs(value);
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder addConfigs(
          int index, LampConfig value) {
        copyOnWrite();
        instance.addConfigs(index, value);
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder addConfigs(
          LampConfig.Builder builderForValue) {
        copyOnWrite();
        instance.addConfigs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder addConfigs(
          int index, LampConfig.Builder builderForValue) {
        copyOnWrite();
        instance.addConfigs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder addAllConfigs(
          Iterable<? extends LampConfig> values) {
        copyOnWrite();
        instance.addAllConfigs(values);
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder clearConfigs() {
        copyOnWrite();
        instance.clearConfigs();
        return this;
      }
      /**
       * <code>repeated .fito.LampConfig configs = 1;</code>
       */
      public Builder removeConfigs(int index) {
        copyOnWrite();
        instance.removeConfigs(index);
        return this;
      }

      /**
       * <code>required uint32 duration = 2;</code>
       */
      public boolean hasDuration() {
        return instance.hasDuration();
      }
      /**
       * <code>required uint32 duration = 2;</code>
       */
      public int getDuration() {
        return instance.getDuration();
      }
      /**
       * <code>required uint32 duration = 2;</code>
       */
      public Builder setDuration(int value) {
        copyOnWrite();
        instance.setDuration(value);
        return this;
      }
      /**
       * <code>required uint32 duration = 2;</code>
       */
      public Builder clearDuration() {
        copyOnWrite();
        instance.clearDuration();
        return this;
      }

      /**
       * <code>required uint32 preset_number = 3;</code>
       */
      public boolean hasPresetNumber() {
        return instance.hasPresetNumber();
      }
      /**
       * <code>required uint32 preset_number = 3;</code>
       */
      public int getPresetNumber() {
        return instance.getPresetNumber();
      }
      /**
       * <code>required uint32 preset_number = 3;</code>
       */
      public Builder setPresetNumber(int value) {
        copyOnWrite();
        instance.setPresetNumber(value);
        return this;
      }
      /**
       * <code>required uint32 preset_number = 3;</code>
       */
      public Builder clearPresetNumber() {
        copyOnWrite();
        instance.clearPresetNumber();
        return this;
      }

      /**
       * <code>required uint32 presets_count = 4;</code>
       */
      public boolean hasPresetsCount() {
        return instance.hasPresetsCount();
      }
      /**
       * <code>required uint32 presets_count = 4;</code>
       */
      public int getPresetsCount() {
        return instance.getPresetsCount();
      }
      /**
       * <code>required uint32 presets_count = 4;</code>
       */
      public Builder setPresetsCount(int value) {
        copyOnWrite();
        instance.setPresetsCount(value);
        return this;
      }
      /**
       * <code>required uint32 presets_count = 4;</code>
       */
      public Builder clearPresetsCount() {
        copyOnWrite();
        instance.clearPresetsCount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Preset)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Preset();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasDuration()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPresetNumber()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasPresetsCount()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getConfigsCount(); i++) {
            if (!getConfigs(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          configs_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Preset other = (Preset) arg1;
          configs_= visitor.visitList(configs_, other.configs_);
          duration_ = visitor.visitInt(
              hasDuration(), duration_,
              other.hasDuration(), other.duration_);
          presetNumber_ = visitor.visitInt(
              hasPresetNumber(), presetNumber_,
              other.hasPresetNumber(), other.presetNumber_);
          presetsCount_ = visitor.visitInt(
              hasPresetsCount(), presetsCount_,
              other.hasPresetsCount(), other.presetsCount_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!configs_.isModifiable()) {
                    configs_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(configs_);
                  }
                  configs_.add(
                      input.readMessage(LampConfig.parser(), extensionRegistry));
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  duration_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000002;
                  presetNumber_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000004;
                  presetsCount_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Preset.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Preset)
    private static final Preset DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Preset();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Preset getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Preset> PARSER;

    public static com.google.protobuf.Parser<Preset> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Param)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
     */
    boolean hasAction();
    /**
     * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
     */
    Param.Action getAction();

    /**
     * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    boolean hasAck();
    /**
     * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    Param.Ack getAck();

    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    boolean hasSysID();
    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    SysID getSysID();

    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    boolean hasTime();
    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    Time getTime();

    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    boolean hasWifiAuth();
    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    WiFiAuth getWifiAuth();

    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    boolean hasLanSetting();
    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    LanSetting getLanSetting();

    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    boolean hasMqttAuth();
    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    MQTTAuth getMqttAuth();

    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    boolean hasPreset();
    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    Preset getPreset();

    public Param.ParamCase getParamCase();
  }
  /**
   * <pre>
   * Сообщение контейнер для настроек
   * </pre>
   *
   * Protobuf type {@code fito.Param}
   */
  public  static final class Param extends
      com.google.protobuf.GeneratedMessageLite<
          Param, Param.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Param)
      ParamOrBuilder {
    private Param() {
      action_ = 3;
    }
    /**
     * Protobuf enum {@code fito.Param.Action}
     */
    public enum Action
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ACK = 0;</code>
       */
      ACK(0),
      /**
       * <code>GET = 1;</code>
       */
      GET(1),
      /**
       * <code>SET = 2;</code>
       */
      SET(2),
      /**
       * <code>VALUE = 3;</code>
       */
      VALUE(3),
      ;

      /**
       * <code>ACK = 0;</code>
       */
      public static final int ACK_VALUE = 0;
      /**
       * <code>GET = 1;</code>
       */
      public static final int GET_VALUE = 1;
      /**
       * <code>SET = 2;</code>
       */
      public static final int SET_VALUE = 2;
      /**
       * <code>VALUE = 3;</code>
       */
      public static final int VALUE_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Action valueOf(int value) {
        return forNumber(value);
      }

      public static Action forNumber(int value) {
        switch (value) {
          case 0: return ACK;
          case 1: return GET;
          case 2: return SET;
          case 3: return VALUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Action>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Action> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Action>() {
              public Action findValueByNumber(int number) {
                return Action.forNumber(number);
              }
            };

      private final int value;

      private Action(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Param.Action)
    }

    /**
     * Protobuf enum {@code fito.Param.Ack}
     */
    public enum Ack
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ACK_ACCEPTED = 0;</code>
       */
      ACK_ACCEPTED(0),
      /**
       * <code>ACK_VALUE_UNSUPPORTED = 1;</code>
       */
      ACK_VALUE_UNSUPPORTED(1),
      /**
       * <code>ACK_FAILED = 2;</code>
       */
      ACK_FAILED(2),
      /**
       * <code>ACK_IN_PROGRESS = 3;</code>
       */
      ACK_IN_PROGRESS(3),
      ;

      /**
       * <code>ACK_ACCEPTED = 0;</code>
       */
      public static final int ACK_ACCEPTED_VALUE = 0;
      /**
       * <code>ACK_VALUE_UNSUPPORTED = 1;</code>
       */
      public static final int ACK_VALUE_UNSUPPORTED_VALUE = 1;
      /**
       * <code>ACK_FAILED = 2;</code>
       */
      public static final int ACK_FAILED_VALUE = 2;
      /**
       * <code>ACK_IN_PROGRESS = 3;</code>
       */
      public static final int ACK_IN_PROGRESS_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Ack valueOf(int value) {
        return forNumber(value);
      }

      public static Ack forNumber(int value) {
        switch (value) {
          case 0: return ACK_ACCEPTED;
          case 1: return ACK_VALUE_UNSUPPORTED;
          case 2: return ACK_FAILED;
          case 3: return ACK_IN_PROGRESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Ack>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Ack> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Ack>() {
              public Ack findValueByNumber(int number) {
                return Ack.forNumber(number);
              }
            };

      private final int value;

      private Ack(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Param.Ack)
    }

    private int bitField0_;
    private int paramCase_ = 0;
    private Object param_;
    public enum ParamCase
        implements com.google.protobuf.Internal.EnumLite {
      SYSID(3),
      TIME(4),
      WIFIAUTH(5),
      LANSETTING(6),
      MQTTAUTH(7),
      PRESET(8),
      PARAM_NOT_SET(0);
      private final int value;
      private ParamCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static ParamCase valueOf(int value) {
        return forNumber(value);
      }

      public static ParamCase forNumber(int value) {
        switch (value) {
          case 3: return SYSID;
          case 4: return TIME;
          case 5: return WIFIAUTH;
          case 6: return LANSETTING;
          case 7: return MQTTAUTH;
          case 8: return PRESET;
          case 0: return PARAM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ParamCase
    getParamCase() {
      return ParamCase.forNumber(
          paramCase_);
    }

    private void clearParam() {
      paramCase_ = 0;
      param_ = null;
    }

    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
     */
    public Action getAction() {
      Action result = Action.forNumber(action_);
      return result == null ? Action.VALUE : result;
    }
    /**
     * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
     */
    private void setAction(Action value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      action_ = value.getNumber();
    }
    /**
     * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = 3;
    }

    public static final int ACK_FIELD_NUMBER = 2;
    private int ack_;
    /**
     * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    public Ack getAck() {
      Ack result = Ack.forNumber(ack_);
      return result == null ? Ack.ACK_ACCEPTED : result;
    }
    /**
     * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    private void setAck(Ack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      ack_ = value.getNumber();
    }
    /**
     * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    private void clearAck() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ack_ = 0;
    }

    public static final int SYSID_FIELD_NUMBER = 3;
    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    public boolean hasSysID() {
      return paramCase_ == 3;
    }
    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    public SysID getSysID() {
      if (paramCase_ == 3) {
         return (SysID) param_;
      }
      return SysID.getDefaultInstance();
    }
    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    private void setSysID(SysID value) {
      if (value == null) {
        throw new NullPointerException();
      }
      param_ = value;
      paramCase_ = 3;
    }
    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    private void setSysID(
        SysID.Builder builderForValue) {
      param_ = builderForValue.build();
      paramCase_ = 3;
    }
    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    private void mergeSysID(SysID value) {
      if (paramCase_ == 3 &&
          param_ != SysID.getDefaultInstance()) {
        param_ = SysID.newBuilder((SysID) param_)
            .mergeFrom(value).buildPartial();
      } else {
        param_ = value;
      }
      paramCase_ = 3;
    }
    /**
     * <code>optional .fito.SysID sysID = 3;</code>
     */
    private void clearSysID() {
      if (paramCase_ == 3) {
        paramCase_ = 0;
        param_ = null;
      }
    }

    public static final int TIME_FIELD_NUMBER = 4;
    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    public boolean hasTime() {
      return paramCase_ == 4;
    }
    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    public Time getTime() {
      if (paramCase_ == 4) {
         return (Time) param_;
      }
      return Time.getDefaultInstance();
    }
    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    private void setTime(Time value) {
      if (value == null) {
        throw new NullPointerException();
      }
      param_ = value;
      paramCase_ = 4;
    }
    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    private void setTime(
        Time.Builder builderForValue) {
      param_ = builderForValue.build();
      paramCase_ = 4;
    }
    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    private void mergeTime(Time value) {
      if (paramCase_ == 4 &&
          param_ != Time.getDefaultInstance()) {
        param_ = Time.newBuilder((Time) param_)
            .mergeFrom(value).buildPartial();
      } else {
        param_ = value;
      }
      paramCase_ = 4;
    }
    /**
     * <code>optional .fito.Time time = 4;</code>
     */
    private void clearTime() {
      if (paramCase_ == 4) {
        paramCase_ = 0;
        param_ = null;
      }
    }

    public static final int WIFIAUTH_FIELD_NUMBER = 5;
    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    public boolean hasWifiAuth() {
      return paramCase_ == 5;
    }
    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    public WiFiAuth getWifiAuth() {
      if (paramCase_ == 5) {
         return (WiFiAuth) param_;
      }
      return WiFiAuth.getDefaultInstance();
    }
    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    private void setWifiAuth(WiFiAuth value) {
      if (value == null) {
        throw new NullPointerException();
      }
      param_ = value;
      paramCase_ = 5;
    }
    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    private void setWifiAuth(
        WiFiAuth.Builder builderForValue) {
      param_ = builderForValue.build();
      paramCase_ = 5;
    }
    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    private void mergeWifiAuth(WiFiAuth value) {
      if (paramCase_ == 5 &&
          param_ != WiFiAuth.getDefaultInstance()) {
        param_ = WiFiAuth.newBuilder((WiFiAuth) param_)
            .mergeFrom(value).buildPartial();
      } else {
        param_ = value;
      }
      paramCase_ = 5;
    }
    /**
     * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
     */
    private void clearWifiAuth() {
      if (paramCase_ == 5) {
        paramCase_ = 0;
        param_ = null;
      }
    }

    public static final int LANSETTING_FIELD_NUMBER = 6;
    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    public boolean hasLanSetting() {
      return paramCase_ == 6;
    }
    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    public LanSetting getLanSetting() {
      if (paramCase_ == 6) {
         return (LanSetting) param_;
      }
      return LanSetting.getDefaultInstance();
    }
    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    private void setLanSetting(LanSetting value) {
      if (value == null) {
        throw new NullPointerException();
      }
      param_ = value;
      paramCase_ = 6;
    }
    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    private void setLanSetting(
        LanSetting.Builder builderForValue) {
      param_ = builderForValue.build();
      paramCase_ = 6;
    }
    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    private void mergeLanSetting(LanSetting value) {
      if (paramCase_ == 6 &&
          param_ != LanSetting.getDefaultInstance()) {
        param_ = LanSetting.newBuilder((LanSetting) param_)
            .mergeFrom(value).buildPartial();
      } else {
        param_ = value;
      }
      paramCase_ = 6;
    }
    /**
     * <code>optional .fito.LanSetting lanSetting = 6;</code>
     */
    private void clearLanSetting() {
      if (paramCase_ == 6) {
        paramCase_ = 0;
        param_ = null;
      }
    }

    public static final int MQTTAUTH_FIELD_NUMBER = 7;
    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    public boolean hasMqttAuth() {
      return paramCase_ == 7;
    }
    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    public MQTTAuth getMqttAuth() {
      if (paramCase_ == 7) {
         return (MQTTAuth) param_;
      }
      return MQTTAuth.getDefaultInstance();
    }
    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    private void setMqttAuth(MQTTAuth value) {
      if (value == null) {
        throw new NullPointerException();
      }
      param_ = value;
      paramCase_ = 7;
    }
    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    private void setMqttAuth(
        MQTTAuth.Builder builderForValue) {
      param_ = builderForValue.build();
      paramCase_ = 7;
    }
    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    private void mergeMqttAuth(MQTTAuth value) {
      if (paramCase_ == 7 &&
          param_ != MQTTAuth.getDefaultInstance()) {
        param_ = MQTTAuth.newBuilder((MQTTAuth) param_)
            .mergeFrom(value).buildPartial();
      } else {
        param_ = value;
      }
      paramCase_ = 7;
    }
    /**
     * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
     */
    private void clearMqttAuth() {
      if (paramCase_ == 7) {
        paramCase_ = 0;
        param_ = null;
      }
    }

    public static final int PRESET_FIELD_NUMBER = 8;
    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    public boolean hasPreset() {
      return paramCase_ == 8;
    }
    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    public Preset getPreset() {
      if (paramCase_ == 8) {
         return (Preset) param_;
      }
      return Preset.getDefaultInstance();
    }
    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    private void setPreset(Preset value) {
      if (value == null) {
        throw new NullPointerException();
      }
      param_ = value;
      paramCase_ = 8;
    }
    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    private void setPreset(
        Preset.Builder builderForValue) {
      param_ = builderForValue.build();
      paramCase_ = 8;
    }
    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    private void mergePreset(Preset value) {
      if (paramCase_ == 8 &&
          param_ != Preset.getDefaultInstance()) {
        param_ = Preset.newBuilder((Preset) param_)
            .mergeFrom(value).buildPartial();
      } else {
        param_ = value;
      }
      paramCase_ = 8;
    }
    /**
     * <code>optional .fito.Preset preset = 8;</code>
     */
    private void clearPreset() {
      if (paramCase_ == 8) {
        paramCase_ = 0;
        param_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, ack_);
      }
      if (paramCase_ == 3) {
        output.writeMessage(3, (SysID) param_);
      }
      if (paramCase_ == 4) {
        output.writeMessage(4, (Time) param_);
      }
      if (paramCase_ == 5) {
        output.writeMessage(5, (WiFiAuth) param_);
      }
      if (paramCase_ == 6) {
        output.writeMessage(6, (LanSetting) param_);
      }
      if (paramCase_ == 7) {
        output.writeMessage(7, (MQTTAuth) param_);
      }
      if (paramCase_ == 8) {
        output.writeMessage(8, (Preset) param_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ack_);
      }
      if (paramCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (SysID) param_);
      }
      if (paramCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (Time) param_);
      }
      if (paramCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (WiFiAuth) param_);
      }
      if (paramCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (LanSetting) param_);
      }
      if (paramCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (MQTTAuth) param_);
      }
      if (paramCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (Preset) param_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Param parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Param parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Param parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Param parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Param parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Param parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Param parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Param parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Param parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Param parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Param prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Сообщение контейнер для настроек
     * </pre>
     *
     * Protobuf type {@code fito.Param}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Param, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Param)
        ParamOrBuilder {
      // Construct using fito.FitoParam.Param.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public ParamCase
          getParamCase() {
        return instance.getParamCase();
      }

      public Builder clearParam() {
        copyOnWrite();
        instance.clearParam();
        return this;
      }


      /**
       * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
       */
      public Action getAction() {
        return instance.getAction();
      }
      /**
       * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
       */
      public Builder setAction(Action value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <code>required .fito.Param.Action action = 1 [default = VALUE];</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public boolean hasAck() {
        return instance.hasAck();
      }
      /**
       * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Ack getAck() {
        return instance.getAck();
      }
      /**
       * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Builder setAck(Ack value) {
        copyOnWrite();
        instance.setAck(value);
        return this;
      }
      /**
       * <code>required .fito.Param.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Builder clearAck() {
        copyOnWrite();
        instance.clearAck();
        return this;
      }

      /**
       * <code>optional .fito.SysID sysID = 3;</code>
       */
      public boolean hasSysID() {
        return instance.hasSysID();
      }
      /**
       * <code>optional .fito.SysID sysID = 3;</code>
       */
      public SysID getSysID() {
        return instance.getSysID();
      }
      /**
       * <code>optional .fito.SysID sysID = 3;</code>
       */
      public Builder setSysID(SysID value) {
        copyOnWrite();
        instance.setSysID(value);
        return this;
      }
      /**
       * <code>optional .fito.SysID sysID = 3;</code>
       */
      public Builder setSysID(
          SysID.Builder builderForValue) {
        copyOnWrite();
        instance.setSysID(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.SysID sysID = 3;</code>
       */
      public Builder mergeSysID(SysID value) {
        copyOnWrite();
        instance.mergeSysID(value);
        return this;
      }
      /**
       * <code>optional .fito.SysID sysID = 3;</code>
       */
      public Builder clearSysID() {
        copyOnWrite();
        instance.clearSysID();
        return this;
      }

      /**
       * <code>optional .fito.Time time = 4;</code>
       */
      public boolean hasTime() {
        return instance.hasTime();
      }
      /**
       * <code>optional .fito.Time time = 4;</code>
       */
      public Time getTime() {
        return instance.getTime();
      }
      /**
       * <code>optional .fito.Time time = 4;</code>
       */
      public Builder setTime(Time value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <code>optional .fito.Time time = 4;</code>
       */
      public Builder setTime(
          Time.Builder builderForValue) {
        copyOnWrite();
        instance.setTime(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.Time time = 4;</code>
       */
      public Builder mergeTime(Time value) {
        copyOnWrite();
        instance.mergeTime(value);
        return this;
      }
      /**
       * <code>optional .fito.Time time = 4;</code>
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }

      /**
       * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
       */
      public boolean hasWifiAuth() {
        return instance.hasWifiAuth();
      }
      /**
       * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
       */
      public WiFiAuth getWifiAuth() {
        return instance.getWifiAuth();
      }
      /**
       * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
       */
      public Builder setWifiAuth(WiFiAuth value) {
        copyOnWrite();
        instance.setWifiAuth(value);
        return this;
      }
      /**
       * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
       */
      public Builder setWifiAuth(
          WiFiAuth.Builder builderForValue) {
        copyOnWrite();
        instance.setWifiAuth(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
       */
      public Builder mergeWifiAuth(WiFiAuth value) {
        copyOnWrite();
        instance.mergeWifiAuth(value);
        return this;
      }
      /**
       * <code>optional .fito.WiFiAuth wifiAuth = 5;</code>
       */
      public Builder clearWifiAuth() {
        copyOnWrite();
        instance.clearWifiAuth();
        return this;
      }

      /**
       * <code>optional .fito.LanSetting lanSetting = 6;</code>
       */
      public boolean hasLanSetting() {
        return instance.hasLanSetting();
      }
      /**
       * <code>optional .fito.LanSetting lanSetting = 6;</code>
       */
      public LanSetting getLanSetting() {
        return instance.getLanSetting();
      }
      /**
       * <code>optional .fito.LanSetting lanSetting = 6;</code>
       */
      public Builder setLanSetting(LanSetting value) {
        copyOnWrite();
        instance.setLanSetting(value);
        return this;
      }
      /**
       * <code>optional .fito.LanSetting lanSetting = 6;</code>
       */
      public Builder setLanSetting(
          LanSetting.Builder builderForValue) {
        copyOnWrite();
        instance.setLanSetting(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.LanSetting lanSetting = 6;</code>
       */
      public Builder mergeLanSetting(LanSetting value) {
        copyOnWrite();
        instance.mergeLanSetting(value);
        return this;
      }
      /**
       * <code>optional .fito.LanSetting lanSetting = 6;</code>
       */
      public Builder clearLanSetting() {
        copyOnWrite();
        instance.clearLanSetting();
        return this;
      }

      /**
       * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
       */
      public boolean hasMqttAuth() {
        return instance.hasMqttAuth();
      }
      /**
       * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
       */
      public MQTTAuth getMqttAuth() {
        return instance.getMqttAuth();
      }
      /**
       * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
       */
      public Builder setMqttAuth(MQTTAuth value) {
        copyOnWrite();
        instance.setMqttAuth(value);
        return this;
      }
      /**
       * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
       */
      public Builder setMqttAuth(
          MQTTAuth.Builder builderForValue) {
        copyOnWrite();
        instance.setMqttAuth(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
       */
      public Builder mergeMqttAuth(MQTTAuth value) {
        copyOnWrite();
        instance.mergeMqttAuth(value);
        return this;
      }
      /**
       * <code>optional .fito.MQTTAuth mqttAuth = 7;</code>
       */
      public Builder clearMqttAuth() {
        copyOnWrite();
        instance.clearMqttAuth();
        return this;
      }

      /**
       * <code>optional .fito.Preset preset = 8;</code>
       */
      public boolean hasPreset() {
        return instance.hasPreset();
      }
      /**
       * <code>optional .fito.Preset preset = 8;</code>
       */
      public Preset getPreset() {
        return instance.getPreset();
      }
      /**
       * <code>optional .fito.Preset preset = 8;</code>
       */
      public Builder setPreset(Preset value) {
        copyOnWrite();
        instance.setPreset(value);
        return this;
      }
      /**
       * <code>optional .fito.Preset preset = 8;</code>
       */
      public Builder setPreset(
          Preset.Builder builderForValue) {
        copyOnWrite();
        instance.setPreset(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.Preset preset = 8;</code>
       */
      public Builder mergePreset(Preset value) {
        copyOnWrite();
        instance.mergePreset(value);
        return this;
      }
      /**
       * <code>optional .fito.Preset preset = 8;</code>
       */
      public Builder clearPreset() {
        copyOnWrite();
        instance.clearPreset();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Param)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Param();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAck()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasSysID()) {
            if (!getSysID().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasTime()) {
            if (!getTime().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasWifiAuth()) {
            if (!getWifiAuth().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasLanSetting()) {
            if (!getLanSetting().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasMqttAuth()) {
            if (!getMqttAuth().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasPreset()) {
            if (!getPreset().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Param other = (Param) arg1;
          action_ = visitor.visitInt(hasAction(), action_,
              other.hasAction(), other.action_);
          ack_ = visitor.visitInt(hasAck(), ack_,
              other.hasAck(), other.ack_);
          switch (other.getParamCase()) {
            case SYSID: {
              param_ = visitor.visitOneofMessage(
                  paramCase_ == 3,
                  param_,
                  other.param_);
              break;
            }
            case TIME: {
              param_ = visitor.visitOneofMessage(
                  paramCase_ == 4,
                  param_,
                  other.param_);
              break;
            }
            case WIFIAUTH: {
              param_ = visitor.visitOneofMessage(
                  paramCase_ == 5,
                  param_,
                  other.param_);
              break;
            }
            case LANSETTING: {
              param_ = visitor.visitOneofMessage(
                  paramCase_ == 6,
                  param_,
                  other.param_);
              break;
            }
            case MQTTAUTH: {
              param_ = visitor.visitOneofMessage(
                  paramCase_ == 7,
                  param_,
                  other.param_);
              break;
            }
            case PRESET: {
              param_ = visitor.visitOneofMessage(
                  paramCase_ == 8,
                  param_,
                  other.param_);
              break;
            }
            case PARAM_NOT_SET: {
              visitor.visitOneofNotSet(paramCase_ != 0);
              break;
            }
          }
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            if (other.paramCase_ != 0) {
              paramCase_ = other.paramCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  Action value = Action.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    action_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  Ack value = Ack.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    ack_ = rawValue;
                  }
                  break;
                }
                case 26: {
                  SysID.Builder subBuilder = null;
                  if (paramCase_ == 3) {
                    subBuilder = ((SysID) param_).toBuilder();
                  }
                  param_ =
                       input.readMessage(SysID.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((SysID) param_);
                    param_ = subBuilder.buildPartial();
                  }
                  paramCase_ = 3;
                  break;
                }
                case 34: {
                  Time.Builder subBuilder = null;
                  if (paramCase_ == 4) {
                    subBuilder = ((Time) param_).toBuilder();
                  }
                  param_ =
                       input.readMessage(Time.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((Time) param_);
                    param_ = subBuilder.buildPartial();
                  }
                  paramCase_ = 4;
                  break;
                }
                case 42: {
                  WiFiAuth.Builder subBuilder = null;
                  if (paramCase_ == 5) {
                    subBuilder = ((WiFiAuth) param_).toBuilder();
                  }
                  param_ =
                       input.readMessage(WiFiAuth.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((WiFiAuth) param_);
                    param_ = subBuilder.buildPartial();
                  }
                  paramCase_ = 5;
                  break;
                }
                case 50: {
                  LanSetting.Builder subBuilder = null;
                  if (paramCase_ == 6) {
                    subBuilder = ((LanSetting) param_).toBuilder();
                  }
                  param_ =
                       input.readMessage(LanSetting.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((LanSetting) param_);
                    param_ = subBuilder.buildPartial();
                  }
                  paramCase_ = 6;
                  break;
                }
                case 58: {
                  MQTTAuth.Builder subBuilder = null;
                  if (paramCase_ == 7) {
                    subBuilder = ((MQTTAuth) param_).toBuilder();
                  }
                  param_ =
                       input.readMessage(MQTTAuth.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((MQTTAuth) param_);
                    param_ = subBuilder.buildPartial();
                  }
                  paramCase_ = 7;
                  break;
                }
                case 66: {
                  Preset.Builder subBuilder = null;
                  if (paramCase_ == 8) {
                    subBuilder = ((Preset) param_).toBuilder();
                  }
                  param_ =
                       input.readMessage(Preset.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((Preset) param_);
                    param_ = subBuilder.buildPartial();
                  }
                  paramCase_ = 8;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Param.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Param)
    private static final Param DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Param();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Param getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Param> PARSER;

    public static com.google.protobuf.Parser<Param> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
