// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fito_cmd.proto

package fito;

public final class FitoCmd {
  private FitoCmd() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PowerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Power)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .fito.Power.State state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .fito.Power.State state = 1;</code>
     */
    Power.State getState();
  }
  /**
   * <pre>
   * Вкл/Выкл
   * </pre>
   *
   * Protobuf type {@code fito.Power}
   */
  public  static final class Power extends
      com.google.protobuf.GeneratedMessageLite<
          Power, Power.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Power)
      PowerOrBuilder {
    private Power() {
    }
    /**
     * Protobuf enum {@code fito.Power.State}
     */
    public enum State
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ON = 0;</code>
       */
      ON(0),
      /**
       * <code>OFF = 1;</code>
       */
      OFF(1),
      ;

      /**
       * <code>ON = 0;</code>
       */
      public static final int ON_VALUE = 0;
      /**
       * <code>OFF = 1;</code>
       */
      public static final int OFF_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static State valueOf(int value) {
        return forNumber(value);
      }

      public static State forNumber(int value) {
        switch (value) {
          case 0: return ON;
          case 1: return OFF;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          State> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.forNumber(number);
              }
            };

      private final int value;

      private State(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Power.State)
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>required .fito.Power.State state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fito.Power.State state = 1;</code>
     */
    public State getState() {
      State result = State.forNumber(state_);
      return result == null ? State.ON : result;
    }
    /**
     * <code>required .fito.Power.State state = 1;</code>
     */
    private void setState(State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      state_ = value.getNumber();
    }
    /**
     * <code>required .fito.Power.State state = 1;</code>
     */
    private void clearState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      state_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Power parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Power parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Power parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Power parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Power parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Power parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Power parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Power parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Power parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Power parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Power prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Вкл/Выкл
     * </pre>
     *
     * Protobuf type {@code fito.Power}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Power, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Power)
        PowerOrBuilder {
      // Construct using fito.FitoCmd.Power.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .fito.Power.State state = 1;</code>
       */
      public boolean hasState() {
        return instance.hasState();
      }
      /**
       * <code>required .fito.Power.State state = 1;</code>
       */
      public State getState() {
        return instance.getState();
      }
      /**
       * <code>required .fito.Power.State state = 1;</code>
       */
      public Builder setState(State value) {
        copyOnWrite();
        instance.setState(value);
        return this;
      }
      /**
       * <code>required .fito.Power.State state = 1;</code>
       */
      public Builder clearState() {
        copyOnWrite();
        instance.clearState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Power)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Power();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasState()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Power other = (Power) arg1;
          state_ = visitor.visitInt(hasState(), state_,
              other.hasState(), other.state_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  State value = State.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    state_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Power.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Power)
    private static final Power DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Power();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Power getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Power> PARSER;

    public static com.google.protobuf.Parser<Power> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RebootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Reboot)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * <pre>
   * Перезагрузка
   * </pre>
   *
   * Protobuf type {@code fito.Reboot}
   */
  public  static final class Reboot extends
      com.google.protobuf.GeneratedMessageLite<
          Reboot, Reboot.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Reboot)
      RebootOrBuilder {
    private Reboot() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Reboot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Reboot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Reboot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Reboot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Reboot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Reboot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Reboot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Reboot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Reboot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Reboot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Reboot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Перезагрузка
     * </pre>
     *
     * Protobuf type {@code fito.Reboot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Reboot, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Reboot)
        RebootOrBuilder {
      // Construct using fito.FitoCmd.Reboot.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:fito.Reboot)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Reboot();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Reboot other = (Reboot) arg1;
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Reboot.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Reboot)
    private static final Reboot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Reboot();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Reboot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Reboot> PARSER;

    public static com.google.protobuf.Parser<Reboot> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RestoreOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Restore)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .fito.Restore.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .fito.Restore.Type type = 1;</code>
     */
    Restore.Type getType();
  }
  /**
   * <pre>
   * Сброс настроек
   * </pre>
   *
   * Protobuf type {@code fito.Restore}
   */
  public  static final class Restore extends
      com.google.protobuf.GeneratedMessageLite<
          Restore, Restore.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Restore)
      RestoreOrBuilder {
    private Restore() {
    }
    /**
     * Protobuf enum {@code fito.Restore.Type}
     */
    public enum Type
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ALL = 0;</code>
       */
      ALL(0),
      /**
       * <code>WiFi = 1;</code>
       */
      WiFi(1),
      /**
       * <code>LAN = 2;</code>
       */
      LAN(2),
      ;

      /**
       * <code>ALL = 0;</code>
       */
      public static final int ALL_VALUE = 0;
      /**
       * <code>WiFi = 1;</code>
       */
      public static final int WiFi_VALUE = 1;
      /**
       * <code>LAN = 2;</code>
       */
      public static final int LAN_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return ALL;
          case 1: return WiFi;
          case 2: return LAN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Restore.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .fito.Restore.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fito.Restore.Type type = 1;</code>
     */
    public Type getType() {
      Type result = Type.forNumber(type_);
      return result == null ? Type.ALL : result;
    }
    /**
     * <code>required .fito.Restore.Type type = 1;</code>
     */
    private void setType(Type value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      type_ = value.getNumber();
    }
    /**
     * <code>required .fito.Restore.Type type = 1;</code>
     */
    private void clearType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Restore parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Restore parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Restore parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Restore parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Restore parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Restore parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Restore parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Restore parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Restore parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Restore parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Restore prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Сброс настроек
     * </pre>
     *
     * Protobuf type {@code fito.Restore}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Restore, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Restore)
        RestoreOrBuilder {
      // Construct using fito.FitoCmd.Restore.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .fito.Restore.Type type = 1;</code>
       */
      public boolean hasType() {
        return instance.hasType();
      }
      /**
       * <code>required .fito.Restore.Type type = 1;</code>
       */
      public Type getType() {
        return instance.getType();
      }
      /**
       * <code>required .fito.Restore.Type type = 1;</code>
       */
      public Builder setType(Type value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>required .fito.Restore.Type type = 1;</code>
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Restore)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Restore();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasType()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Restore other = (Restore) arg1;
          type_ = visitor.visitInt(hasType(), type_,
              other.hasType(), other.type_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  Type value = Type.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Restore.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Restore)
    private static final Restore DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Restore();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Restore getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Restore> PARSER;

    public static com.google.protobuf.Parser<Restore> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface EyeSafeModeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.EyeSafeMode)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .fito.EyeSafeMode.State state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .fito.EyeSafeMode.State state = 1;</code>
     */
    EyeSafeMode.State getState();
  }
  /**
   * <pre>
   * Безопасный для глаз режим
   * </pre>
   *
   * Protobuf type {@code fito.EyeSafeMode}
   */
  public  static final class EyeSafeMode extends
      com.google.protobuf.GeneratedMessageLite<
          EyeSafeMode, EyeSafeMode.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.EyeSafeMode)
      EyeSafeModeOrBuilder {
    private EyeSafeMode() {
    }
    /**
     * Protobuf enum {@code fito.EyeSafeMode.State}
     */
    public enum State
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ON = 0;</code>
       */
      ON(0),
      /**
       * <code>OFF = 1;</code>
       */
      OFF(1),
      ;

      /**
       * <code>ON = 0;</code>
       */
      public static final int ON_VALUE = 0;
      /**
       * <code>OFF = 1;</code>
       */
      public static final int OFF_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static State valueOf(int value) {
        return forNumber(value);
      }

      public static State forNumber(int value) {
        switch (value) {
          case 0: return ON;
          case 1: return OFF;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          State> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.forNumber(number);
              }
            };

      private final int value;

      private State(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.EyeSafeMode.State)
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>required .fito.EyeSafeMode.State state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fito.EyeSafeMode.State state = 1;</code>
     */
    public State getState() {
      State result = State.forNumber(state_);
      return result == null ? State.ON : result;
    }
    /**
     * <code>required .fito.EyeSafeMode.State state = 1;</code>
     */
    private void setState(State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      state_ = value.getNumber();
    }
    /**
     * <code>required .fito.EyeSafeMode.State state = 1;</code>
     */
    private void clearState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      state_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, state_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static EyeSafeMode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static EyeSafeMode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static EyeSafeMode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static EyeSafeMode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static EyeSafeMode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static EyeSafeMode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static EyeSafeMode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static EyeSafeMode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static EyeSafeMode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static EyeSafeMode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EyeSafeMode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Безопасный для глаз режим
     * </pre>
     *
     * Protobuf type {@code fito.EyeSafeMode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          EyeSafeMode, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.EyeSafeMode)
        EyeSafeModeOrBuilder {
      // Construct using fito.FitoCmd.EyeSafeMode.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .fito.EyeSafeMode.State state = 1;</code>
       */
      public boolean hasState() {
        return instance.hasState();
      }
      /**
       * <code>required .fito.EyeSafeMode.State state = 1;</code>
       */
      public State getState() {
        return instance.getState();
      }
      /**
       * <code>required .fito.EyeSafeMode.State state = 1;</code>
       */
      public Builder setState(State value) {
        copyOnWrite();
        instance.setState(value);
        return this;
      }
      /**
       * <code>required .fito.EyeSafeMode.State state = 1;</code>
       */
      public Builder clearState() {
        copyOnWrite();
        instance.clearState();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.EyeSafeMode)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new EyeSafeMode();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasState()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          EyeSafeMode other = (EyeSafeMode) arg1;
          state_ = visitor.visitInt(hasState(), state_,
              other.hasState(), other.state_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  State value = State.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    state_ = rawValue;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (EyeSafeMode.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.EyeSafeMode)
    private static final EyeSafeMode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EyeSafeMode();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static EyeSafeMode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<EyeSafeMode> PARSER;

    public static com.google.protobuf.Parser<EyeSafeMode> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fito.Cmd)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .fito.Cmd.Action action = 1;</code>
     */
    boolean hasAction();
    /**
     * <code>required .fito.Cmd.Action action = 1;</code>
     */
    Cmd.Action getAction();

    /**
     * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    boolean hasAck();
    /**
     * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    Cmd.Ack getAck();

    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    boolean hasPower();
    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    Power getPower();

    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    boolean hasReboot();
    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    Reboot getReboot();

    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    boolean hasRestore();
    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    Restore getRestore();

    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    boolean hasEyeSafeMode();
    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    EyeSafeMode getEyeSafeMode();

    public Cmd.CmdCase getCmdCase();
  }
  /**
   * <pre>
   * Сообщение контейнер комманд
   * </pre>
   *
   * Protobuf type {@code fito.Cmd}
   */
  public  static final class Cmd extends
      com.google.protobuf.GeneratedMessageLite<
          Cmd, Cmd.Builder> implements
      // @@protoc_insertion_point(message_implements:fito.Cmd)
      CmdOrBuilder {
    private Cmd() {
    }
    /**
     * Protobuf enum {@code fito.Cmd.Action}
     */
    public enum Action
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ACK = 0;</code>
       */
      ACK(0),
      /**
       * <code>CMD = 1;</code>
       */
      CMD(1),
      ;

      /**
       * <code>ACK = 0;</code>
       */
      public static final int ACK_VALUE = 0;
      /**
       * <code>CMD = 1;</code>
       */
      public static final int CMD_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Action valueOf(int value) {
        return forNumber(value);
      }

      public static Action forNumber(int value) {
        switch (value) {
          case 0: return ACK;
          case 1: return CMD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Action>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Action> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Action>() {
              public Action findValueByNumber(int number) {
                return Action.forNumber(number);
              }
            };

      private final int value;

      private Action(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Cmd.Action)
    }

    /**
     * Protobuf enum {@code fito.Cmd.Ack}
     */
    public enum Ack
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>ACK_ACCEPTED = 0;</code>
       */
      ACK_ACCEPTED(0),
      /**
       * <code>ACK_VALUE_UNSUPPORTED = 1;</code>
       */
      ACK_VALUE_UNSUPPORTED(1),
      /**
       * <code>ACK_FAILED = 2;</code>
       */
      ACK_FAILED(2),
      /**
       * <code>ACK_IN_PROGRESS = 3;</code>
       */
      ACK_IN_PROGRESS(3),
      ;

      /**
       * <code>ACK_ACCEPTED = 0;</code>
       */
      public static final int ACK_ACCEPTED_VALUE = 0;
      /**
       * <code>ACK_VALUE_UNSUPPORTED = 1;</code>
       */
      public static final int ACK_VALUE_UNSUPPORTED_VALUE = 1;
      /**
       * <code>ACK_FAILED = 2;</code>
       */
      public static final int ACK_FAILED_VALUE = 2;
      /**
       * <code>ACK_IN_PROGRESS = 3;</code>
       */
      public static final int ACK_IN_PROGRESS_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static Ack valueOf(int value) {
        return forNumber(value);
      }

      public static Ack forNumber(int value) {
        switch (value) {
          case 0: return ACK_ACCEPTED;
          case 1: return ACK_VALUE_UNSUPPORTED;
          case 2: return ACK_FAILED;
          case 3: return ACK_IN_PROGRESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Ack>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Ack> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Ack>() {
              public Ack findValueByNumber(int number) {
                return Ack.forNumber(number);
              }
            };

      private final int value;

      private Ack(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fito.Cmd.Ack)
    }

    private int bitField0_;
    private int cmdCase_ = 0;
    private Object cmd_;
    public enum CmdCase
        implements com.google.protobuf.Internal.EnumLite {
      POWER(3),
      REBOOT(4),
      RESTORE(5),
      EYESAFEMODE(6),
      CMD_NOT_SET(0);
      private final int value;
      private CmdCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static CmdCase valueOf(int value) {
        return forNumber(value);
      }

      public static CmdCase forNumber(int value) {
        switch (value) {
          case 3: return POWER;
          case 4: return REBOOT;
          case 5: return RESTORE;
          case 6: return EYESAFEMODE;
          case 0: return CMD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public CmdCase
    getCmdCase() {
      return CmdCase.forNumber(
          cmdCase_);
    }

    private void clearCmd() {
      cmdCase_ = 0;
      cmd_ = null;
    }

    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required .fito.Cmd.Action action = 1;</code>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .fito.Cmd.Action action = 1;</code>
     */
    public Action getAction() {
      Action result = Action.forNumber(action_);
      return result == null ? Action.ACK : result;
    }
    /**
     * <code>required .fito.Cmd.Action action = 1;</code>
     */
    private void setAction(Action value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      action_ = value.getNumber();
    }
    /**
     * <code>required .fito.Cmd.Action action = 1;</code>
     */
    private void clearAction() {
      bitField0_ = (bitField0_ & ~0x00000001);
      action_ = 0;
    }

    public static final int ACK_FIELD_NUMBER = 2;
    private int ack_;
    /**
     * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    public Ack getAck() {
      Ack result = Ack.forNumber(ack_);
      return result == null ? Ack.ACK_ACCEPTED : result;
    }
    /**
     * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    private void setAck(Ack value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      ack_ = value.getNumber();
    }
    /**
     * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
     */
    private void clearAck() {
      bitField0_ = (bitField0_ & ~0x00000002);
      ack_ = 0;
    }

    public static final int POWER_FIELD_NUMBER = 3;
    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    public boolean hasPower() {
      return cmdCase_ == 3;
    }
    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    public Power getPower() {
      if (cmdCase_ == 3) {
         return (Power) cmd_;
      }
      return Power.getDefaultInstance();
    }
    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    private void setPower(Power value) {
      if (value == null) {
        throw new NullPointerException();
      }
      cmd_ = value;
      cmdCase_ = 3;
    }
    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    private void setPower(
        Power.Builder builderForValue) {
      cmd_ = builderForValue.build();
      cmdCase_ = 3;
    }
    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    private void mergePower(Power value) {
      if (cmdCase_ == 3 &&
          cmd_ != Power.getDefaultInstance()) {
        cmd_ = Power.newBuilder((Power) cmd_)
            .mergeFrom(value).buildPartial();
      } else {
        cmd_ = value;
      }
      cmdCase_ = 3;
    }
    /**
     * <code>optional .fito.Power power = 3;</code>
     */
    private void clearPower() {
      if (cmdCase_ == 3) {
        cmdCase_ = 0;
        cmd_ = null;
      }
    }

    public static final int REBOOT_FIELD_NUMBER = 4;
    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    public boolean hasReboot() {
      return cmdCase_ == 4;
    }
    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    public Reboot getReboot() {
      if (cmdCase_ == 4) {
         return (Reboot) cmd_;
      }
      return Reboot.getDefaultInstance();
    }
    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    private void setReboot(Reboot value) {
      if (value == null) {
        throw new NullPointerException();
      }
      cmd_ = value;
      cmdCase_ = 4;
    }
    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    private void setReboot(
        Reboot.Builder builderForValue) {
      cmd_ = builderForValue.build();
      cmdCase_ = 4;
    }
    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    private void mergeReboot(Reboot value) {
      if (cmdCase_ == 4 &&
          cmd_ != Reboot.getDefaultInstance()) {
        cmd_ = Reboot.newBuilder((Reboot) cmd_)
            .mergeFrom(value).buildPartial();
      } else {
        cmd_ = value;
      }
      cmdCase_ = 4;
    }
    /**
     * <code>optional .fito.Reboot reboot = 4;</code>
     */
    private void clearReboot() {
      if (cmdCase_ == 4) {
        cmdCase_ = 0;
        cmd_ = null;
      }
    }

    public static final int RESTORE_FIELD_NUMBER = 5;
    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    public boolean hasRestore() {
      return cmdCase_ == 5;
    }
    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    public Restore getRestore() {
      if (cmdCase_ == 5) {
         return (Restore) cmd_;
      }
      return Restore.getDefaultInstance();
    }
    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    private void setRestore(Restore value) {
      if (value == null) {
        throw new NullPointerException();
      }
      cmd_ = value;
      cmdCase_ = 5;
    }
    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    private void setRestore(
        Restore.Builder builderForValue) {
      cmd_ = builderForValue.build();
      cmdCase_ = 5;
    }
    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    private void mergeRestore(Restore value) {
      if (cmdCase_ == 5 &&
          cmd_ != Restore.getDefaultInstance()) {
        cmd_ = Restore.newBuilder((Restore) cmd_)
            .mergeFrom(value).buildPartial();
      } else {
        cmd_ = value;
      }
      cmdCase_ = 5;
    }
    /**
     * <code>optional .fito.Restore restore = 5;</code>
     */
    private void clearRestore() {
      if (cmdCase_ == 5) {
        cmdCase_ = 0;
        cmd_ = null;
      }
    }

    public static final int EYESAFEMODE_FIELD_NUMBER = 6;
    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    public boolean hasEyeSafeMode() {
      return cmdCase_ == 6;
    }
    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    public EyeSafeMode getEyeSafeMode() {
      if (cmdCase_ == 6) {
         return (EyeSafeMode) cmd_;
      }
      return EyeSafeMode.getDefaultInstance();
    }
    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    private void setEyeSafeMode(EyeSafeMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      cmd_ = value;
      cmdCase_ = 6;
    }
    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    private void setEyeSafeMode(
        EyeSafeMode.Builder builderForValue) {
      cmd_ = builderForValue.build();
      cmdCase_ = 6;
    }
    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    private void mergeEyeSafeMode(EyeSafeMode value) {
      if (cmdCase_ == 6 &&
          cmd_ != EyeSafeMode.getDefaultInstance()) {
        cmd_ = EyeSafeMode.newBuilder((EyeSafeMode) cmd_)
            .mergeFrom(value).buildPartial();
      } else {
        cmd_ = value;
      }
      cmdCase_ = 6;
    }
    /**
     * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
     */
    private void clearEyeSafeMode() {
      if (cmdCase_ == 6) {
        cmdCase_ = 0;
        cmd_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, ack_);
      }
      if (cmdCase_ == 3) {
        output.writeMessage(3, (Power) cmd_);
      }
      if (cmdCase_ == 4) {
        output.writeMessage(4, (Reboot) cmd_);
      }
      if (cmdCase_ == 5) {
        output.writeMessage(5, (Restore) cmd_);
      }
      if (cmdCase_ == 6) {
        output.writeMessage(6, (EyeSafeMode) cmd_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ack_);
      }
      if (cmdCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (Power) cmd_);
      }
      if (cmdCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (Reboot) cmd_);
      }
      if (cmdCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (Restore) cmd_);
      }
      if (cmdCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (EyeSafeMode) cmd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static Cmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Cmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Cmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static Cmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static Cmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Cmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Cmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static Cmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static Cmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static Cmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Cmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Сообщение контейнер комманд
     * </pre>
     *
     * Protobuf type {@code fito.Cmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          Cmd, Builder> implements
        // @@protoc_insertion_point(builder_implements:fito.Cmd)
        CmdOrBuilder {
      // Construct using fito.FitoCmd.Cmd.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public CmdCase
          getCmdCase() {
        return instance.getCmdCase();
      }

      public Builder clearCmd() {
        copyOnWrite();
        instance.clearCmd();
        return this;
      }


      /**
       * <code>required .fito.Cmd.Action action = 1;</code>
       */
      public boolean hasAction() {
        return instance.hasAction();
      }
      /**
       * <code>required .fito.Cmd.Action action = 1;</code>
       */
      public Action getAction() {
        return instance.getAction();
      }
      /**
       * <code>required .fito.Cmd.Action action = 1;</code>
       */
      public Builder setAction(Action value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <code>required .fito.Cmd.Action action = 1;</code>
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public boolean hasAck() {
        return instance.hasAck();
      }
      /**
       * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Ack getAck() {
        return instance.getAck();
      }
      /**
       * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Builder setAck(Ack value) {
        copyOnWrite();
        instance.setAck(value);
        return this;
      }
      /**
       * <code>required .fito.Cmd.Ack ack = 2 [default = ACK_ACCEPTED];</code>
       */
      public Builder clearAck() {
        copyOnWrite();
        instance.clearAck();
        return this;
      }

      /**
       * <code>optional .fito.Power power = 3;</code>
       */
      public boolean hasPower() {
        return instance.hasPower();
      }
      /**
       * <code>optional .fito.Power power = 3;</code>
       */
      public Power getPower() {
        return instance.getPower();
      }
      /**
       * <code>optional .fito.Power power = 3;</code>
       */
      public Builder setPower(Power value) {
        copyOnWrite();
        instance.setPower(value);
        return this;
      }
      /**
       * <code>optional .fito.Power power = 3;</code>
       */
      public Builder setPower(
          Power.Builder builderForValue) {
        copyOnWrite();
        instance.setPower(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.Power power = 3;</code>
       */
      public Builder mergePower(Power value) {
        copyOnWrite();
        instance.mergePower(value);
        return this;
      }
      /**
       * <code>optional .fito.Power power = 3;</code>
       */
      public Builder clearPower() {
        copyOnWrite();
        instance.clearPower();
        return this;
      }

      /**
       * <code>optional .fito.Reboot reboot = 4;</code>
       */
      public boolean hasReboot() {
        return instance.hasReboot();
      }
      /**
       * <code>optional .fito.Reboot reboot = 4;</code>
       */
      public Reboot getReboot() {
        return instance.getReboot();
      }
      /**
       * <code>optional .fito.Reboot reboot = 4;</code>
       */
      public Builder setReboot(Reboot value) {
        copyOnWrite();
        instance.setReboot(value);
        return this;
      }
      /**
       * <code>optional .fito.Reboot reboot = 4;</code>
       */
      public Builder setReboot(
          Reboot.Builder builderForValue) {
        copyOnWrite();
        instance.setReboot(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.Reboot reboot = 4;</code>
       */
      public Builder mergeReboot(Reboot value) {
        copyOnWrite();
        instance.mergeReboot(value);
        return this;
      }
      /**
       * <code>optional .fito.Reboot reboot = 4;</code>
       */
      public Builder clearReboot() {
        copyOnWrite();
        instance.clearReboot();
        return this;
      }

      /**
       * <code>optional .fito.Restore restore = 5;</code>
       */
      public boolean hasRestore() {
        return instance.hasRestore();
      }
      /**
       * <code>optional .fito.Restore restore = 5;</code>
       */
      public Restore getRestore() {
        return instance.getRestore();
      }
      /**
       * <code>optional .fito.Restore restore = 5;</code>
       */
      public Builder setRestore(Restore value) {
        copyOnWrite();
        instance.setRestore(value);
        return this;
      }
      /**
       * <code>optional .fito.Restore restore = 5;</code>
       */
      public Builder setRestore(
          Restore.Builder builderForValue) {
        copyOnWrite();
        instance.setRestore(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.Restore restore = 5;</code>
       */
      public Builder mergeRestore(Restore value) {
        copyOnWrite();
        instance.mergeRestore(value);
        return this;
      }
      /**
       * <code>optional .fito.Restore restore = 5;</code>
       */
      public Builder clearRestore() {
        copyOnWrite();
        instance.clearRestore();
        return this;
      }

      /**
       * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
       */
      public boolean hasEyeSafeMode() {
        return instance.hasEyeSafeMode();
      }
      /**
       * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
       */
      public EyeSafeMode getEyeSafeMode() {
        return instance.getEyeSafeMode();
      }
      /**
       * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
       */
      public Builder setEyeSafeMode(EyeSafeMode value) {
        copyOnWrite();
        instance.setEyeSafeMode(value);
        return this;
      }
      /**
       * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
       */
      public Builder setEyeSafeMode(
          EyeSafeMode.Builder builderForValue) {
        copyOnWrite();
        instance.setEyeSafeMode(builderForValue);
        return this;
      }
      /**
       * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
       */
      public Builder mergeEyeSafeMode(EyeSafeMode value) {
        copyOnWrite();
        instance.mergeEyeSafeMode(value);
        return this;
      }
      /**
       * <code>optional .fito.EyeSafeMode eyeSafeMode = 6;</code>
       */
      public Builder clearEyeSafeMode() {
        copyOnWrite();
        instance.clearEyeSafeMode();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fito.Cmd)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new Cmd();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasAction()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasAck()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasPower()) {
            if (!getPower().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasRestore()) {
            if (!getRestore().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasEyeSafeMode()) {
            if (!getEyeSafeMode().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          Cmd other = (Cmd) arg1;
          action_ = visitor.visitInt(hasAction(), action_,
              other.hasAction(), other.action_);
          ack_ = visitor.visitInt(hasAck(), ack_,
              other.hasAck(), other.ack_);
          switch (other.getCmdCase()) {
            case POWER: {
              cmd_ = visitor.visitOneofMessage(
                  cmdCase_ == 3,
                  cmd_,
                  other.cmd_);
              break;
            }
            case REBOOT: {
              cmd_ = visitor.visitOneofMessage(
                  cmdCase_ == 4,
                  cmd_,
                  other.cmd_);
              break;
            }
            case RESTORE: {
              cmd_ = visitor.visitOneofMessage(
                  cmdCase_ == 5,
                  cmd_,
                  other.cmd_);
              break;
            }
            case EYESAFEMODE: {
              cmd_ = visitor.visitOneofMessage(
                  cmdCase_ == 6,
                  cmd_,
                  other.cmd_);
              break;
            }
            case CMD_NOT_SET: {
              visitor.visitOneofNotSet(cmdCase_ != 0);
              break;
            }
          }
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            if (other.cmdCase_ != 0) {
              cmdCase_ = other.cmdCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  Action value = Action.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    action_ = rawValue;
                  }
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();
                  Ack value = Ack.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(2, rawValue);
                  } else {
                    bitField0_ |= 0x00000002;
                    ack_ = rawValue;
                  }
                  break;
                }
                case 26: {
                  Power.Builder subBuilder = null;
                  if (cmdCase_ == 3) {
                    subBuilder = ((Power) cmd_).toBuilder();
                  }
                  cmd_ =
                       input.readMessage(Power.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((Power) cmd_);
                    cmd_ = subBuilder.buildPartial();
                  }
                  cmdCase_ = 3;
                  break;
                }
                case 34: {
                  Reboot.Builder subBuilder = null;
                  if (cmdCase_ == 4) {
                    subBuilder = ((Reboot) cmd_).toBuilder();
                  }
                  cmd_ =
                       input.readMessage(Reboot.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((Reboot) cmd_);
                    cmd_ = subBuilder.buildPartial();
                  }
                  cmdCase_ = 4;
                  break;
                }
                case 42: {
                  Restore.Builder subBuilder = null;
                  if (cmdCase_ == 5) {
                    subBuilder = ((Restore) cmd_).toBuilder();
                  }
                  cmd_ =
                       input.readMessage(Restore.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((Restore) cmd_);
                    cmd_ = subBuilder.buildPartial();
                  }
                  cmdCase_ = 5;
                  break;
                }
                case 50: {
                  EyeSafeMode.Builder subBuilder = null;
                  if (cmdCase_ == 6) {
                    subBuilder = ((EyeSafeMode) cmd_).toBuilder();
                  }
                  cmd_ =
                       input.readMessage(EyeSafeMode.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((EyeSafeMode) cmd_);
                    cmd_ = subBuilder.buildPartial();
                  }
                  cmdCase_ = 6;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (Cmd.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fito.Cmd)
    private static final Cmd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Cmd();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static Cmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Cmd> PARSER;

    public static com.google.protobuf.Parser<Cmd> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
